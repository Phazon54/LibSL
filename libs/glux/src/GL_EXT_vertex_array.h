
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_vertex_array__
#define __GLUX_GL_EXT_vertex_array__

GLUX_NEW_PLUGIN(GL_EXT_vertex_array)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_VERTEX_ARRAY_EXT
#    define GL_VERTEX_ARRAY_EXT 0x8074
#  endif
#  ifndef GL_NORMAL_ARRAY_EXT
#    define GL_NORMAL_ARRAY_EXT 0x8075
#  endif
#  ifndef GL_COLOR_ARRAY_EXT
#    define GL_COLOR_ARRAY_EXT 0x8076
#  endif
#  ifndef GL_INDEX_ARRAY_EXT
#    define GL_INDEX_ARRAY_EXT 0x8077
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_EXT
#    define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_EXT
#    define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#  endif
#  ifndef GL_VERTEX_ARRAY_SIZE_EXT
#    define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#  endif
#  ifndef GL_VERTEX_ARRAY_TYPE_EXT
#    define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#  endif
#  ifndef GL_VERTEX_ARRAY_STRIDE_EXT
#    define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#  endif
#  ifndef GL_VERTEX_ARRAY_COUNT_EXT
#    define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#  endif
#  ifndef GL_NORMAL_ARRAY_TYPE_EXT
#    define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#  endif
#  ifndef GL_NORMAL_ARRAY_STRIDE_EXT
#    define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#  endif
#  ifndef GL_NORMAL_ARRAY_COUNT_EXT
#    define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#  endif
#  ifndef GL_COLOR_ARRAY_SIZE_EXT
#    define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#  endif
#  ifndef GL_COLOR_ARRAY_TYPE_EXT
#    define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#  endif
#  ifndef GL_COLOR_ARRAY_STRIDE_EXT
#    define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#  endif
#  ifndef GL_COLOR_ARRAY_COUNT_EXT
#    define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#  endif
#  ifndef GL_INDEX_ARRAY_TYPE_EXT
#    define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#  endif
#  ifndef GL_INDEX_ARRAY_STRIDE_EXT
#    define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#  endif
#  ifndef GL_INDEX_ARRAY_COUNT_EXT
#    define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_SIZE_EXT
#    define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_TYPE_EXT
#    define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
#    define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_COUNT_EXT
#    define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_STRIDE_EXT
#    define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_COUNT_EXT
#    define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#  endif
#  ifndef GL_VERTEX_ARRAY_POINTER_EXT
#    define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#  endif
#  ifndef GL_NORMAL_ARRAY_POINTER_EXT
#    define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#  endif
#  ifndef GL_COLOR_ARRAY_POINTER_EXT
#    define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#  endif
#  ifndef GL_INDEX_ARRAY_POINTER_EXT
#    define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_POINTER_EXT
#    define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_POINTER_EXT
#    define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glArrayElementEXT
typedef void (APIENTRYP PFNGLUXARRAYELEMENTEXTPROC) (GLint i);
#endif
#ifndef __GLUX__GLFCT_glColorPointerEXT
typedef void (APIENTRYP PFNGLUXCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawArraysEXT
typedef void (APIENTRYP PFNGLUXDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerEXT
typedef void (APIENTRYP PFNGLUXEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetPointervEXT
typedef void (APIENTRYP PFNGLUXGETPOINTERVEXTPROC) (GLenum pname, void **params);
#endif
#ifndef __GLUX__GLFCT_glIndexPointerEXT
typedef void (APIENTRYP PFNGLUXINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glNormalPointerEXT
typedef void (APIENTRYP PFNGLUXNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerEXT
typedef void (APIENTRYP PFNGLUXTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glVertexPointerEXT
typedef void (APIENTRYP PFNGLUXVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glArrayElementEXT
extern PFNGLUXARRAYELEMENTEXTPROC glArrayElementEXT;
#endif
#ifndef __GLUX__GLFCT_glColorPointerEXT
extern PFNGLUXCOLORPOINTEREXTPROC glColorPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glDrawArraysEXT
extern PFNGLUXDRAWARRAYSEXTPROC glDrawArraysEXT;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagPointerEXT
extern PFNGLUXEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glGetPointervEXT
extern PFNGLUXGETPOINTERVEXTPROC glGetPointervEXT;
#endif
#ifndef __GLUX__GLFCT_glIndexPointerEXT
extern PFNGLUXINDEXPOINTEREXTPROC glIndexPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glNormalPointerEXT
extern PFNGLUXNORMALPOINTEREXTPROC glNormalPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glTexCoordPointerEXT
extern PFNGLUXTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
#endif
#ifndef __GLUX__GLFCT_glVertexPointerEXT
extern PFNGLUXVERTEXPOINTEREXTPROC glVertexPointerEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
