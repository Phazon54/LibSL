
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_OES_fixed_point__
#define __GLUX_GL_OES_fixed_point__

GLUX_NEW_PLUGIN(GL_OES_fixed_point)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_FIXED_OES
#    define GL_FIXED_OES 0x140C
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glAlphaFuncxOES
typedef void (APIENTRYP PFNGLUXALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);
#endif
#ifndef __GLUX__GLFCT_glClearColorxOES
typedef void (APIENTRYP PFNGLUXCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
#endif
#ifndef __GLUX__GLFCT_glClearDepthxOES
typedef void (APIENTRYP PFNGLUXCLEARDEPTHXOESPROC) (GLfixed depth);
#endif
#ifndef __GLUX__GLFCT_glClipPlanexOES
typedef void (APIENTRYP PFNGLUXCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);
#endif
#ifndef __GLUX__GLFCT_glColor4xOES
typedef void (APIENTRYP PFNGLUXCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
#endif
#ifndef __GLUX__GLFCT_glDepthRangexOES
typedef void (APIENTRYP PFNGLUXDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);
#endif
#ifndef __GLUX__GLFCT_glFogxOES
typedef void (APIENTRYP PFNGLUXFOGXOESPROC) (GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glFogxvOES
typedef void (APIENTRYP PFNGLUXFOGXVOESPROC) (GLenum pname, const GLfixed *param);
#endif
#ifndef __GLUX__GLFCT_glFrustumxOES
typedef void (APIENTRYP PFNGLUXFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
#endif
#ifndef __GLUX__GLFCT_glGetClipPlanexOES
typedef void (APIENTRYP PFNGLUXGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);
#endif
#ifndef __GLUX__GLFCT_glGetFixedvOES
typedef void (APIENTRYP PFNGLUXGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexEnvxvOES
typedef void (APIENTRYP PFNGLUXGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterxvOES
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glLightModelxOES
typedef void (APIENTRYP PFNGLUXLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glLightModelxvOES
typedef void (APIENTRYP PFNGLUXLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);
#endif
#ifndef __GLUX__GLFCT_glLightxOES
typedef void (APIENTRYP PFNGLUXLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glLightxvOES
typedef void (APIENTRYP PFNGLUXLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glLineWidthxOES
typedef void (APIENTRYP PFNGLUXLINEWIDTHXOESPROC) (GLfixed width);
#endif
#ifndef __GLUX__GLFCT_glLoadMatrixxOES
typedef void (APIENTRYP PFNGLUXLOADMATRIXXOESPROC) (const GLfixed *m);
#endif
#ifndef __GLUX__GLFCT_glMaterialxOES
typedef void (APIENTRYP PFNGLUXMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glMaterialxvOES
typedef void (APIENTRYP PFNGLUXMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);
#endif
#ifndef __GLUX__GLFCT_glMultMatrixxOES
typedef void (APIENTRYP PFNGLUXMULTMATRIXXOESPROC) (const GLfixed *m);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4xOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
#endif
#ifndef __GLUX__GLFCT_glNormal3xOES
typedef void (APIENTRYP PFNGLUXNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);
#endif
#ifndef __GLUX__GLFCT_glOrthoxOES
typedef void (APIENTRYP PFNGLUXORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
#endif
#ifndef __GLUX__GLFCT_glPointParameterxvOES
typedef void (APIENTRYP PFNGLUXPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glPointSizexOES
typedef void (APIENTRYP PFNGLUXPOINTSIZEXOESPROC) (GLfixed size);
#endif
#ifndef __GLUX__GLFCT_glPolygonOffsetxOES
typedef void (APIENTRYP PFNGLUXPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);
#endif
#ifndef __GLUX__GLFCT_glRotatexOES
typedef void (APIENTRYP PFNGLUXROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
#endif
#ifndef __GLUX__GLFCT_glScalexOES
typedef void (APIENTRYP PFNGLUXSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
#endif
#ifndef __GLUX__GLFCT_glTexEnvxOES
typedef void (APIENTRYP PFNGLUXTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glTexEnvxvOES
typedef void (APIENTRYP PFNGLUXTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterxOES
typedef void (APIENTRYP PFNGLUXTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glTexParameterxvOES
typedef void (APIENTRYP PFNGLUXTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glTranslatexOES
typedef void (APIENTRYP PFNGLUXTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);
#endif
#ifndef __GLUX__GLFCT_glAccumxOES
typedef void (APIENTRYP PFNGLUXACCUMXOESPROC) (GLenum op, GLfixed value);
#endif
#ifndef __GLUX__GLFCT_glBitmapxOES
typedef void (APIENTRYP PFNGLUXBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
#endif
#ifndef __GLUX__GLFCT_glBlendColorxOES
typedef void (APIENTRYP PFNGLUXBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
#endif
#ifndef __GLUX__GLFCT_glClearAccumxOES
typedef void (APIENTRYP PFNGLUXCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
#endif
#ifndef __GLUX__GLFCT_glColor3xOES
typedef void (APIENTRYP PFNGLUXCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);
#endif
#ifndef __GLUX__GLFCT_glColor3xvOES
typedef void (APIENTRYP PFNGLUXCOLOR3XVOESPROC) (const GLfixed *components);
#endif
#ifndef __GLUX__GLFCT_glColor4xvOES
typedef void (APIENTRYP PFNGLUXCOLOR4XVOESPROC) (const GLfixed *components);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterxOES
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterxvOES
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glEvalCoord1xOES
typedef void (APIENTRYP PFNGLUXEVALCOORD1XOESPROC) (GLfixed u);
#endif
#ifndef __GLUX__GLFCT_glEvalCoord1xvOES
typedef void (APIENTRYP PFNGLUXEVALCOORD1XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glEvalCoord2xOES
typedef void (APIENTRYP PFNGLUXEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);
#endif
#ifndef __GLUX__GLFCT_glEvalCoord2xvOES
typedef void (APIENTRYP PFNGLUXEVALCOORD2XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glFeedbackBufferxOES
typedef void (APIENTRYP PFNGLUXFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterxvOES
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterxvOES
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetLightxOES
typedef void (APIENTRYP PFNGLUXGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetMapxvOES
typedef void (APIENTRYP PFNGLUXGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);
#endif
#ifndef __GLUX__GLFCT_glGetMaterialxOES
typedef void (APIENTRYP PFNGLUXGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glGetPixelMapxv
typedef void (APIENTRYP PFNGLUXGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);
#endif
#ifndef __GLUX__GLFCT_glGetTexGenxvOES
typedef void (APIENTRYP PFNGLUXGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexLevelParameterxvOES
typedef void (APIENTRYP PFNGLUXGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glIndexxOES
typedef void (APIENTRYP PFNGLUXINDEXXOESPROC) (GLfixed component);
#endif
#ifndef __GLUX__GLFCT_glIndexxvOES
typedef void (APIENTRYP PFNGLUXINDEXXVOESPROC) (const GLfixed *component);
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixxOES
typedef void (APIENTRYP PFNGLUXLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
#endif
#ifndef __GLUX__GLFCT_glMap1xOES
typedef void (APIENTRYP PFNGLUXMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
#endif
#ifndef __GLUX__GLFCT_glMap2xOES
typedef void (APIENTRYP PFNGLUXMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
#endif
#ifndef __GLUX__GLFCT_glMapGrid1xOES
typedef void (APIENTRYP PFNGLUXMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);
#endif
#ifndef __GLUX__GLFCT_glMapGrid2xOES
typedef void (APIENTRYP PFNGLUXMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixxOES
typedef void (APIENTRYP PFNGLUXMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1xOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1xvOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2xOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2xvOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3xOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3xvOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4xvOES
typedef void (APIENTRYP PFNGLUXMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glNormal3xvOES
typedef void (APIENTRYP PFNGLUXNORMAL3XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glPassThroughxOES
typedef void (APIENTRYP PFNGLUXPASSTHROUGHXOESPROC) (GLfixed token);
#endif
#ifndef __GLUX__GLFCT_glPixelMapx
typedef void (APIENTRYP PFNGLUXPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);
#endif
#ifndef __GLUX__GLFCT_glPixelStorex
typedef void (APIENTRYP PFNGLUXPIXELSTOREXPROC) (GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glPixelTransferxOES
typedef void (APIENTRYP PFNGLUXPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glPixelZoomxOES
typedef void (APIENTRYP PFNGLUXPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);
#endif
#ifndef __GLUX__GLFCT_glPrioritizeTexturesxOES
typedef void (APIENTRYP PFNGLUXPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);
#endif
#ifndef __GLUX__GLFCT_glRasterPos2xOES
typedef void (APIENTRYP PFNGLUXRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);
#endif
#ifndef __GLUX__GLFCT_glRasterPos2xvOES
typedef void (APIENTRYP PFNGLUXRASTERPOS2XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glRasterPos3xOES
typedef void (APIENTRYP PFNGLUXRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
#endif
#ifndef __GLUX__GLFCT_glRasterPos3xvOES
typedef void (APIENTRYP PFNGLUXRASTERPOS3XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glRasterPos4xOES
typedef void (APIENTRYP PFNGLUXRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
#endif
#ifndef __GLUX__GLFCT_glRasterPos4xvOES
typedef void (APIENTRYP PFNGLUXRASTERPOS4XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glRectxOES
typedef void (APIENTRYP PFNGLUXRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
#endif
#ifndef __GLUX__GLFCT_glRectxvOES
typedef void (APIENTRYP PFNGLUXRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);
#endif
#ifndef __GLUX__GLFCT_glTexCoord1xOES
typedef void (APIENTRYP PFNGLUXTEXCOORD1XOESPROC) (GLfixed s);
#endif
#ifndef __GLUX__GLFCT_glTexCoord1xvOES
typedef void (APIENTRYP PFNGLUXTEXCOORD1XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoord2xOES
typedef void (APIENTRYP PFNGLUXTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);
#endif
#ifndef __GLUX__GLFCT_glTexCoord2xvOES
typedef void (APIENTRYP PFNGLUXTEXCOORD2XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoord3xOES
typedef void (APIENTRYP PFNGLUXTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);
#endif
#ifndef __GLUX__GLFCT_glTexCoord3xvOES
typedef void (APIENTRYP PFNGLUXTEXCOORD3XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoord4xOES
typedef void (APIENTRYP PFNGLUXTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
#endif
#ifndef __GLUX__GLFCT_glTexCoord4xvOES
typedef void (APIENTRYP PFNGLUXTEXCOORD4XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glTexGenxOES
typedef void (APIENTRYP PFNGLUXTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);
#endif
#ifndef __GLUX__GLFCT_glTexGenxvOES
typedef void (APIENTRYP PFNGLUXTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);
#endif
#ifndef __GLUX__GLFCT_glVertex2xOES
typedef void (APIENTRYP PFNGLUXVERTEX2XOESPROC) (GLfixed x);
#endif
#ifndef __GLUX__GLFCT_glVertex2xvOES
typedef void (APIENTRYP PFNGLUXVERTEX2XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glVertex3xOES
typedef void (APIENTRYP PFNGLUXVERTEX3XOESPROC) (GLfixed x, GLfixed y);
#endif
#ifndef __GLUX__GLFCT_glVertex3xvOES
typedef void (APIENTRYP PFNGLUXVERTEX3XVOESPROC) (const GLfixed *coords);
#endif
#ifndef __GLUX__GLFCT_glVertex4xOES
typedef void (APIENTRYP PFNGLUXVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);
#endif
#ifndef __GLUX__GLFCT_glVertex4xvOES
typedef void (APIENTRYP PFNGLUXVERTEX4XVOESPROC) (const GLfixed *coords);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glAlphaFuncxOES
extern PFNGLUXALPHAFUNCXOESPROC glAlphaFuncxOES;
#endif
#ifndef __GLUX__GLFCT_glClearColorxOES
extern PFNGLUXCLEARCOLORXOESPROC glClearColorxOES;
#endif
#ifndef __GLUX__GLFCT_glClearDepthxOES
extern PFNGLUXCLEARDEPTHXOESPROC glClearDepthxOES;
#endif
#ifndef __GLUX__GLFCT_glClipPlanexOES
extern PFNGLUXCLIPPLANEXOESPROC glClipPlanexOES;
#endif
#ifndef __GLUX__GLFCT_glColor4xOES
extern PFNGLUXCOLOR4XOESPROC glColor4xOES;
#endif
#ifndef __GLUX__GLFCT_glDepthRangexOES
extern PFNGLUXDEPTHRANGEXOESPROC glDepthRangexOES;
#endif
#ifndef __GLUX__GLFCT_glFogxOES
extern PFNGLUXFOGXOESPROC glFogxOES;
#endif
#ifndef __GLUX__GLFCT_glFogxvOES
extern PFNGLUXFOGXVOESPROC glFogxvOES;
#endif
#ifndef __GLUX__GLFCT_glFrustumxOES
extern PFNGLUXFRUSTUMXOESPROC glFrustumxOES;
#endif
#ifndef __GLUX__GLFCT_glGetClipPlanexOES
extern PFNGLUXGETCLIPPLANEXOESPROC glGetClipPlanexOES;
#endif
#ifndef __GLUX__GLFCT_glGetFixedvOES
extern PFNGLUXGETFIXEDVOESPROC glGetFixedvOES;
#endif
#ifndef __GLUX__GLFCT_glGetTexEnvxvOES
extern PFNGLUXGETTEXENVXVOESPROC glGetTexEnvxvOES;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterxvOES
extern PFNGLUXGETTEXPARAMETERXVOESPROC glGetTexParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glLightModelxOES
extern PFNGLUXLIGHTMODELXOESPROC glLightModelxOES;
#endif
#ifndef __GLUX__GLFCT_glLightModelxvOES
extern PFNGLUXLIGHTMODELXVOESPROC glLightModelxvOES;
#endif
#ifndef __GLUX__GLFCT_glLightxOES
extern PFNGLUXLIGHTXOESPROC glLightxOES;
#endif
#ifndef __GLUX__GLFCT_glLightxvOES
extern PFNGLUXLIGHTXVOESPROC glLightxvOES;
#endif
#ifndef __GLUX__GLFCT_glLineWidthxOES
extern PFNGLUXLINEWIDTHXOESPROC glLineWidthxOES;
#endif
#ifndef __GLUX__GLFCT_glLoadMatrixxOES
extern PFNGLUXLOADMATRIXXOESPROC glLoadMatrixxOES;
#endif
#ifndef __GLUX__GLFCT_glMaterialxOES
extern PFNGLUXMATERIALXOESPROC glMaterialxOES;
#endif
#ifndef __GLUX__GLFCT_glMaterialxvOES
extern PFNGLUXMATERIALXVOESPROC glMaterialxvOES;
#endif
#ifndef __GLUX__GLFCT_glMultMatrixxOES
extern PFNGLUXMULTMATRIXXOESPROC glMultMatrixxOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4xOES
extern PFNGLUXMULTITEXCOORD4XOESPROC glMultiTexCoord4xOES;
#endif
#ifndef __GLUX__GLFCT_glNormal3xOES
extern PFNGLUXNORMAL3XOESPROC glNormal3xOES;
#endif
#ifndef __GLUX__GLFCT_glOrthoxOES
extern PFNGLUXORTHOXOESPROC glOrthoxOES;
#endif
#ifndef __GLUX__GLFCT_glPointParameterxvOES
extern PFNGLUXPOINTPARAMETERXVOESPROC glPointParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glPointSizexOES
extern PFNGLUXPOINTSIZEXOESPROC glPointSizexOES;
#endif
#ifndef __GLUX__GLFCT_glPolygonOffsetxOES
extern PFNGLUXPOLYGONOFFSETXOESPROC glPolygonOffsetxOES;
#endif
#ifndef __GLUX__GLFCT_glRotatexOES
extern PFNGLUXROTATEXOESPROC glRotatexOES;
#endif
#ifndef __GLUX__GLFCT_glScalexOES
extern PFNGLUXSCALEXOESPROC glScalexOES;
#endif
#ifndef __GLUX__GLFCT_glTexEnvxOES
extern PFNGLUXTEXENVXOESPROC glTexEnvxOES;
#endif
#ifndef __GLUX__GLFCT_glTexEnvxvOES
extern PFNGLUXTEXENVXVOESPROC glTexEnvxvOES;
#endif
#ifndef __GLUX__GLFCT_glTexParameterxOES
extern PFNGLUXTEXPARAMETERXOESPROC glTexParameterxOES;
#endif
#ifndef __GLUX__GLFCT_glTexParameterxvOES
extern PFNGLUXTEXPARAMETERXVOESPROC glTexParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glTranslatexOES
extern PFNGLUXTRANSLATEXOESPROC glTranslatexOES;
#endif
#ifndef __GLUX__GLFCT_glAccumxOES
extern PFNGLUXACCUMXOESPROC glAccumxOES;
#endif
#ifndef __GLUX__GLFCT_glBitmapxOES
extern PFNGLUXBITMAPXOESPROC glBitmapxOES;
#endif
#ifndef __GLUX__GLFCT_glBlendColorxOES
extern PFNGLUXBLENDCOLORXOESPROC glBlendColorxOES;
#endif
#ifndef __GLUX__GLFCT_glClearAccumxOES
extern PFNGLUXCLEARACCUMXOESPROC glClearAccumxOES;
#endif
#ifndef __GLUX__GLFCT_glColor3xOES
extern PFNGLUXCOLOR3XOESPROC glColor3xOES;
#endif
#ifndef __GLUX__GLFCT_glColor3xvOES
extern PFNGLUXCOLOR3XVOESPROC glColor3xvOES;
#endif
#ifndef __GLUX__GLFCT_glColor4xvOES
extern PFNGLUXCOLOR4XVOESPROC glColor4xvOES;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterxOES
extern PFNGLUXCONVOLUTIONPARAMETERXOESPROC glConvolutionParameterxOES;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterxvOES
extern PFNGLUXCONVOLUTIONPARAMETERXVOESPROC glConvolutionParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glEvalCoord1xOES
extern PFNGLUXEVALCOORD1XOESPROC glEvalCoord1xOES;
#endif
#ifndef __GLUX__GLFCT_glEvalCoord1xvOES
extern PFNGLUXEVALCOORD1XVOESPROC glEvalCoord1xvOES;
#endif
#ifndef __GLUX__GLFCT_glEvalCoord2xOES
extern PFNGLUXEVALCOORD2XOESPROC glEvalCoord2xOES;
#endif
#ifndef __GLUX__GLFCT_glEvalCoord2xvOES
extern PFNGLUXEVALCOORD2XVOESPROC glEvalCoord2xvOES;
#endif
#ifndef __GLUX__GLFCT_glFeedbackBufferxOES
extern PFNGLUXFEEDBACKBUFFERXOESPROC glFeedbackBufferxOES;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterxvOES
extern PFNGLUXGETCONVOLUTIONPARAMETERXVOESPROC glGetConvolutionParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterxvOES
extern PFNGLUXGETHISTOGRAMPARAMETERXVOESPROC glGetHistogramParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glGetLightxOES
extern PFNGLUXGETLIGHTXOESPROC glGetLightxOES;
#endif
#ifndef __GLUX__GLFCT_glGetMapxvOES
extern PFNGLUXGETMAPXVOESPROC glGetMapxvOES;
#endif
#ifndef __GLUX__GLFCT_glGetMaterialxOES
extern PFNGLUXGETMATERIALXOESPROC glGetMaterialxOES;
#endif
#ifndef __GLUX__GLFCT_glGetPixelMapxv
extern PFNGLUXGETPIXELMAPXVPROC glGetPixelMapxv;
#endif
#ifndef __GLUX__GLFCT_glGetTexGenxvOES
extern PFNGLUXGETTEXGENXVOESPROC glGetTexGenxvOES;
#endif
#ifndef __GLUX__GLFCT_glGetTexLevelParameterxvOES
extern PFNGLUXGETTEXLEVELPARAMETERXVOESPROC glGetTexLevelParameterxvOES;
#endif
#ifndef __GLUX__GLFCT_glIndexxOES
extern PFNGLUXINDEXXOESPROC glIndexxOES;
#endif
#ifndef __GLUX__GLFCT_glIndexxvOES
extern PFNGLUXINDEXXVOESPROC glIndexxvOES;
#endif
#ifndef __GLUX__GLFCT_glLoadTransposeMatrixxOES
extern PFNGLUXLOADTRANSPOSEMATRIXXOESPROC glLoadTransposeMatrixxOES;
#endif
#ifndef __GLUX__GLFCT_glMap1xOES
extern PFNGLUXMAP1XOESPROC glMap1xOES;
#endif
#ifndef __GLUX__GLFCT_glMap2xOES
extern PFNGLUXMAP2XOESPROC glMap2xOES;
#endif
#ifndef __GLUX__GLFCT_glMapGrid1xOES
extern PFNGLUXMAPGRID1XOESPROC glMapGrid1xOES;
#endif
#ifndef __GLUX__GLFCT_glMapGrid2xOES
extern PFNGLUXMAPGRID2XOESPROC glMapGrid2xOES;
#endif
#ifndef __GLUX__GLFCT_glMultTransposeMatrixxOES
extern PFNGLUXMULTTRANSPOSEMATRIXXOESPROC glMultTransposeMatrixxOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1xOES
extern PFNGLUXMULTITEXCOORD1XOESPROC glMultiTexCoord1xOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord1xvOES
extern PFNGLUXMULTITEXCOORD1XVOESPROC glMultiTexCoord1xvOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2xOES
extern PFNGLUXMULTITEXCOORD2XOESPROC glMultiTexCoord2xOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord2xvOES
extern PFNGLUXMULTITEXCOORD2XVOESPROC glMultiTexCoord2xvOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3xOES
extern PFNGLUXMULTITEXCOORD3XOESPROC glMultiTexCoord3xOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord3xvOES
extern PFNGLUXMULTITEXCOORD3XVOESPROC glMultiTexCoord3xvOES;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoord4xvOES
extern PFNGLUXMULTITEXCOORD4XVOESPROC glMultiTexCoord4xvOES;
#endif
#ifndef __GLUX__GLFCT_glNormal3xvOES
extern PFNGLUXNORMAL3XVOESPROC glNormal3xvOES;
#endif
#ifndef __GLUX__GLFCT_glPassThroughxOES
extern PFNGLUXPASSTHROUGHXOESPROC glPassThroughxOES;
#endif
#ifndef __GLUX__GLFCT_glPixelMapx
extern PFNGLUXPIXELMAPXPROC glPixelMapx;
#endif
#ifndef __GLUX__GLFCT_glPixelStorex
extern PFNGLUXPIXELSTOREXPROC glPixelStorex;
#endif
#ifndef __GLUX__GLFCT_glPixelTransferxOES
extern PFNGLUXPIXELTRANSFERXOESPROC glPixelTransferxOES;
#endif
#ifndef __GLUX__GLFCT_glPixelZoomxOES
extern PFNGLUXPIXELZOOMXOESPROC glPixelZoomxOES;
#endif
#ifndef __GLUX__GLFCT_glPrioritizeTexturesxOES
extern PFNGLUXPRIORITIZETEXTURESXOESPROC glPrioritizeTexturesxOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos2xOES
extern PFNGLUXRASTERPOS2XOESPROC glRasterPos2xOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos2xvOES
extern PFNGLUXRASTERPOS2XVOESPROC glRasterPos2xvOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos3xOES
extern PFNGLUXRASTERPOS3XOESPROC glRasterPos3xOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos3xvOES
extern PFNGLUXRASTERPOS3XVOESPROC glRasterPos3xvOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos4xOES
extern PFNGLUXRASTERPOS4XOESPROC glRasterPos4xOES;
#endif
#ifndef __GLUX__GLFCT_glRasterPos4xvOES
extern PFNGLUXRASTERPOS4XVOESPROC glRasterPos4xvOES;
#endif
#ifndef __GLUX__GLFCT_glRectxOES
extern PFNGLUXRECTXOESPROC glRectxOES;
#endif
#ifndef __GLUX__GLFCT_glRectxvOES
extern PFNGLUXRECTXVOESPROC glRectxvOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord1xOES
extern PFNGLUXTEXCOORD1XOESPROC glTexCoord1xOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord1xvOES
extern PFNGLUXTEXCOORD1XVOESPROC glTexCoord1xvOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord2xOES
extern PFNGLUXTEXCOORD2XOESPROC glTexCoord2xOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord2xvOES
extern PFNGLUXTEXCOORD2XVOESPROC glTexCoord2xvOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord3xOES
extern PFNGLUXTEXCOORD3XOESPROC glTexCoord3xOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord3xvOES
extern PFNGLUXTEXCOORD3XVOESPROC glTexCoord3xvOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord4xOES
extern PFNGLUXTEXCOORD4XOESPROC glTexCoord4xOES;
#endif
#ifndef __GLUX__GLFCT_glTexCoord4xvOES
extern PFNGLUXTEXCOORD4XVOESPROC glTexCoord4xvOES;
#endif
#ifndef __GLUX__GLFCT_glTexGenxOES
extern PFNGLUXTEXGENXOESPROC glTexGenxOES;
#endif
#ifndef __GLUX__GLFCT_glTexGenxvOES
extern PFNGLUXTEXGENXVOESPROC glTexGenxvOES;
#endif
#ifndef __GLUX__GLFCT_glVertex2xOES
extern PFNGLUXVERTEX2XOESPROC glVertex2xOES;
#endif
#ifndef __GLUX__GLFCT_glVertex2xvOES
extern PFNGLUXVERTEX2XVOESPROC glVertex2xvOES;
#endif
#ifndef __GLUX__GLFCT_glVertex3xOES
extern PFNGLUXVERTEX3XOESPROC glVertex3xOES;
#endif
#ifndef __GLUX__GLFCT_glVertex3xvOES
extern PFNGLUXVERTEX3XVOESPROC glVertex3xvOES;
#endif
#ifndef __GLUX__GLFCT_glVertex4xOES
extern PFNGLUXVERTEX4XOESPROC glVertex4xOES;
#endif
#ifndef __GLUX__GLFCT_glVertex4xvOES
extern PFNGLUXVERTEX4XVOESPROC glVertex4xvOES;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
