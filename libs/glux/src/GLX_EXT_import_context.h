
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_EXT_import_context__
#define __GLUX_GLX_EXT_import_context__

GLUX_NEW_PLUGIN(GLX_EXT_import_context)
// --------------------------------------------------------
#if !(defined WIN32 || defined(_WIN64) || defined __APPLE__ || defined EMSCRIPTEN)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GLX_SHARE_CONTEXT_EXT
#    define GLX_SHARE_CONTEXT_EXT 0x800A
#  endif
#  ifndef GLX_VISUAL_ID_EXT
#    define GLX_VISUAL_ID_EXT 0x800B
#  endif
#  ifndef GLX_SCREEN_EXT
#    define GLX_SCREEN_EXT 0x800C
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXGetCurrentDisplayEXT
typedef Display *(APIENTRYP PFNXGLUXGETCURRENTDISPLAYEXTPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glXQueryContextInfoEXT
typedef int (APIENTRYP PFNXGLUXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *value);
#endif
#ifndef __GLUX__GLFCT_glXGetContextIDEXT
typedef GLXContextID (APIENTRYP PFNXGLUXGETCONTEXTIDEXTPROC) (const GLXContext context);
#endif
#ifndef __GLUX__GLFCT_glXImportContextEXT
typedef GLXContext (APIENTRYP PFNXGLUXIMPORTCONTEXTEXTPROC) (Display *dpy, GLXContextID contextID);
#endif
#ifndef __GLUX__GLFCT_glXFreeContextEXT
typedef void (APIENTRYP PFNXGLUXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXGetCurrentDisplayEXT
extern PFNXGLUXGETCURRENTDISPLAYEXTPROC glXGetCurrentDisplayEXT;
#endif
#ifndef __GLUX__GLFCT_glXQueryContextInfoEXT
extern PFNXGLUXQUERYCONTEXTINFOEXTPROC glXQueryContextInfoEXT;
#endif
#ifndef __GLUX__GLFCT_glXGetContextIDEXT
extern PFNXGLUXGETCONTEXTIDEXTPROC glXGetContextIDEXT;
#endif
#ifndef __GLUX__GLFCT_glXImportContextEXT
extern PFNXGLUXIMPORTCONTEXTEXTPROC glXImportContextEXT;
#endif
#ifndef __GLUX__GLFCT_glXFreeContextEXT
extern PFNXGLUXFREECONTEXTEXTPROC glXFreeContextEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
