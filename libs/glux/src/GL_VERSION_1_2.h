
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_1_2__
#define __GLUX_GL_VERSION_1_2__

GLUX_NEW_PLUGIN(GL_VERSION_1_2)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_UNSIGNED_BYTE_3_3_2
#    define GL_UNSIGNED_BYTE_3_3_2 0x8032
#  endif
#  ifndef GL_UNSIGNED_SHORT_4_4_4_4
#    define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#  endif
#  ifndef GL_UNSIGNED_SHORT_5_5_5_1
#    define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#  endif
#  ifndef GL_UNSIGNED_INT_8_8_8_8
#    define GL_UNSIGNED_INT_8_8_8_8 0x8035
#  endif
#  ifndef GL_UNSIGNED_INT_10_10_10_2
#    define GL_UNSIGNED_INT_10_10_10_2 0x8036
#  endif
#  ifndef GL_TEXTURE_BINDING_3D
#    define GL_TEXTURE_BINDING_3D 0x806A
#  endif
#  ifndef GL_PACK_SKIP_IMAGES
#    define GL_PACK_SKIP_IMAGES 0x806B
#  endif
#  ifndef GL_PACK_IMAGE_HEIGHT
#    define GL_PACK_IMAGE_HEIGHT 0x806C
#  endif
#  ifndef GL_UNPACK_SKIP_IMAGES
#    define GL_UNPACK_SKIP_IMAGES 0x806D
#  endif
#  ifndef GL_UNPACK_IMAGE_HEIGHT
#    define GL_UNPACK_IMAGE_HEIGHT 0x806E
#  endif
#  ifndef GL_TEXTURE_3D
#    define GL_TEXTURE_3D 0x806F
#  endif
#  ifndef GL_PROXY_TEXTURE_3D
#    define GL_PROXY_TEXTURE_3D 0x8070
#  endif
#  ifndef GL_TEXTURE_DEPTH
#    define GL_TEXTURE_DEPTH 0x8071
#  endif
#  ifndef GL_TEXTURE_WRAP_R
#    define GL_TEXTURE_WRAP_R 0x8072
#  endif
#  ifndef GL_MAX_3D_TEXTURE_SIZE
#    define GL_MAX_3D_TEXTURE_SIZE 0x8073
#  endif
#  ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#    define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#  endif
#  ifndef GL_UNSIGNED_SHORT_5_6_5
#    define GL_UNSIGNED_SHORT_5_6_5 0x8363
#  endif
#  ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#    define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#  endif
#  ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#    define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#  endif
#  ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#    define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#  endif
#  ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#    define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#  endif
#  ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#    define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#  endif
#  ifndef GL_BGR
#    define GL_BGR 0x80E0
#  endif
#  ifndef GL_BGRA
#    define GL_BGRA 0x80E1
#  endif
#  ifndef GL_MAX_ELEMENTS_VERTICES
#    define GL_MAX_ELEMENTS_VERTICES 0x80E8
#  endif
#  ifndef GL_MAX_ELEMENTS_INDICES
#    define GL_MAX_ELEMENTS_INDICES 0x80E9
#  endif
#  ifndef GL_CLAMP_TO_EDGE
#    define GL_CLAMP_TO_EDGE 0x812F
#  endif
#  ifndef GL_TEXTURE_MIN_LOD
#    define GL_TEXTURE_MIN_LOD 0x813A
#  endif
#  ifndef GL_TEXTURE_MAX_LOD
#    define GL_TEXTURE_MAX_LOD 0x813B
#  endif
#  ifndef GL_TEXTURE_BASE_LEVEL
#    define GL_TEXTURE_BASE_LEVEL 0x813C
#  endif
#  ifndef GL_TEXTURE_MAX_LEVEL
#    define GL_TEXTURE_MAX_LEVEL 0x813D
#  endif
#  ifndef GL_SMOOTH_POINT_SIZE_RANGE
#    define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#  endif
#  ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#    define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#  endif
#  ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#    define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#  endif
#  ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#    define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#  endif
#  ifndef GL_ALIASED_LINE_WIDTH_RANGE
#    define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#  endif
#  ifndef GL_RESCALE_NORMAL
#    define GL_RESCALE_NORMAL 0x803A
#  endif
#  ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#    define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#  endif
#  ifndef GL_SINGLE_COLOR
#    define GL_SINGLE_COLOR 0x81F9
#  endif
#  ifndef GL_SEPARATE_SPECULAR_COLOR
#    define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#  endif
#  ifndef GL_ALIASED_POINT_SIZE_RANGE
#    define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDrawRangeElements
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
typedef void (APIENTRYP PFNGLUXTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
typedef void (APIENTRYP PFNGLUXTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDrawRangeElements
extern PFNGLUXDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifndef __GLUX__GLFCT_glTexImage3D
extern PFNGLUXTEXIMAGE3DPROC glTexImage3D;
#endif
#ifndef __GLUX__GLFCT_glTexSubImage3D
extern PFNGLUXTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTexSubImage3D
extern PFNGLUXCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
