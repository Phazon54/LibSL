
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_gpu_shader4__
#define __GLUX_GL_EXT_gpu_shader4__

GLUX_NEW_PLUGIN(GL_EXT_gpu_shader4)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
#    define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#  endif
#  ifndef GL_SAMPLER_1D_ARRAY_EXT
#    define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#  endif
#  ifndef GL_SAMPLER_2D_ARRAY_EXT
#    define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#  endif
#  ifndef GL_SAMPLER_BUFFER_EXT
#    define GL_SAMPLER_BUFFER_EXT 0x8DC2
#  endif
#  ifndef GL_SAMPLER_1D_ARRAY_SHADOW_EXT
#    define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#  endif
#  ifndef GL_SAMPLER_2D_ARRAY_SHADOW_EXT
#    define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#  endif
#  ifndef GL_SAMPLER_CUBE_SHADOW_EXT
#    define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#  endif
#  ifndef GL_UNSIGNED_INT_VEC2_EXT
#    define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#  endif
#  ifndef GL_UNSIGNED_INT_VEC3_EXT
#    define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#  endif
#  ifndef GL_UNSIGNED_INT_VEC4_EXT
#    define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#  endif
#  ifndef GL_INT_SAMPLER_1D_EXT
#    define GL_INT_SAMPLER_1D_EXT 0x8DC9
#  endif
#  ifndef GL_INT_SAMPLER_2D_EXT
#    define GL_INT_SAMPLER_2D_EXT 0x8DCA
#  endif
#  ifndef GL_INT_SAMPLER_3D_EXT
#    define GL_INT_SAMPLER_3D_EXT 0x8DCB
#  endif
#  ifndef GL_INT_SAMPLER_CUBE_EXT
#    define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#  endif
#  ifndef GL_INT_SAMPLER_2D_RECT_EXT
#    define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#  endif
#  ifndef GL_INT_SAMPLER_1D_ARRAY_EXT
#    define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#  endif
#  ifndef GL_INT_SAMPLER_2D_ARRAY_EXT
#    define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#  endif
#  ifndef GL_INT_SAMPLER_BUFFER_EXT
#    define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_1D_EXT
#    define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_2D_EXT
#    define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_3D_EXT
#    define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
#    define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
#    define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
#    define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
#    define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#  endif
#  ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
#    define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#  endif
#  ifndef GL_MIN_PROGRAM_TEXEL_OFFSET_EXT
#    define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#  endif
#  ifndef GL_MAX_PROGRAM_TEXEL_OFFSET_EXT
#    define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetUniformuivEXT
typedef void (APIENTRYP PFNGLUXGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glBindFragDataLocationEXT
typedef void (APIENTRYP PFNGLUXBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetFragDataLocationEXT
typedef GLint (APIENTRYP PFNGLUXGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glUniform1uiEXT
typedef void (APIENTRYP PFNGLUXUNIFORM1UIEXTPROC) (GLint location, GLuint v0);
#endif
#ifndef __GLUX__GLFCT_glUniform2uiEXT
typedef void (APIENTRYP PFNGLUXUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);
#endif
#ifndef __GLUX__GLFCT_glUniform3uiEXT
typedef void (APIENTRYP PFNGLUXUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);
#endif
#ifndef __GLUX__GLFCT_glUniform4uiEXT
typedef void (APIENTRYP PFNGLUXUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
#endif
#ifndef __GLUX__GLFCT_glUniform1uivEXT
typedef void (APIENTRYP PFNGLUXUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform2uivEXT
typedef void (APIENTRYP PFNGLUXUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform3uivEXT
typedef void (APIENTRYP PFNGLUXUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glUniform4uivEXT
typedef void (APIENTRYP PFNGLUXUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetUniformuivEXT
extern PFNGLUXGETUNIFORMUIVEXTPROC glGetUniformuivEXT;
#endif
#ifndef __GLUX__GLFCT_glBindFragDataLocationEXT
extern PFNGLUXBINDFRAGDATALOCATIONEXTPROC glBindFragDataLocationEXT;
#endif
#ifndef __GLUX__GLFCT_glGetFragDataLocationEXT
extern PFNGLUXGETFRAGDATALOCATIONEXTPROC glGetFragDataLocationEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform1uiEXT
extern PFNGLUXUNIFORM1UIEXTPROC glUniform1uiEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform2uiEXT
extern PFNGLUXUNIFORM2UIEXTPROC glUniform2uiEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform3uiEXT
extern PFNGLUXUNIFORM3UIEXTPROC glUniform3uiEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform4uiEXT
extern PFNGLUXUNIFORM4UIEXTPROC glUniform4uiEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform1uivEXT
extern PFNGLUXUNIFORM1UIVEXTPROC glUniform1uivEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform2uivEXT
extern PFNGLUXUNIFORM2UIVEXTPROC glUniform2uivEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform3uivEXT
extern PFNGLUXUNIFORM3UIVEXTPROC glUniform3uivEXT;
#endif
#ifndef __GLUX__GLFCT_glUniform4uivEXT
extern PFNGLUXUNIFORM4UIVEXTPROC glUniform4uivEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
