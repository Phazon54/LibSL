
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_vertex_buffer_unified_memory__
#define __GLUX_GL_NV_vertex_buffer_unified_memory__

GLUX_NEW_PLUGIN(GL_NV_vertex_buffer_unified_memory)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#    define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#  endif
#  ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#    define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#  endif
#  ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#    define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#  endif
#  ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#    define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#  endif
#  ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#    define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#  endif
#  ifndef GL_COLOR_ARRAY_ADDRESS_NV
#    define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#  endif
#  ifndef GL_INDEX_ARRAY_ADDRESS_NV
#    define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#    define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#    define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#  endif
#  ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#    define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#  endif
#  ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#    define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#  endif
#  ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#    define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#  endif
#  ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#    define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#  endif
#  ifndef GL_VERTEX_ARRAY_LENGTH_NV
#    define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#  endif
#  ifndef GL_NORMAL_ARRAY_LENGTH_NV
#    define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#  endif
#  ifndef GL_COLOR_ARRAY_LENGTH_NV
#    define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#  endif
#  ifndef GL_INDEX_ARRAY_LENGTH_NV
#    define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#  endif
#  ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#    define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#  endif
#  ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#    define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#  endif
#  ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#    define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#  endif
#  ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#    define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#  endif
#  ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#    define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#  endif
#  ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#    define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#  endif
#  ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#    define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#  endif
#  ifndef GL_DRAW_INDIRECT_LENGTH_NV
#    define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
typedef void (APIENTRYP PFNGLUXBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
typedef void (APIENTRYP PFNGLUXNORMALFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
typedef void (APIENTRYP PFNGLUXCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
typedef void (APIENTRYP PFNGLUXINDEXFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
typedef void (APIENTRYP PFNGLUXTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
typedef void (APIENTRYP PFNGLUXEDGEFLAGFORMATNVPROC) (GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
typedef void (APIENTRYP PFNGLUXFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
typedef void (APIENTRYP PFNGLUXGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBufferAddressRangeNV
extern PFNGLUXBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
#endif
#ifndef __GLUX__GLFCT_glVertexFormatNV
extern PFNGLUXVERTEXFORMATNVPROC glVertexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glNormalFormatNV
extern PFNGLUXNORMALFORMATNVPROC glNormalFormatNV;
#endif
#ifndef __GLUX__GLFCT_glColorFormatNV
extern PFNGLUXCOLORFORMATNVPROC glColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glIndexFormatNV
extern PFNGLUXINDEXFORMATNVPROC glIndexFormatNV;
#endif
#ifndef __GLUX__GLFCT_glTexCoordFormatNV
extern PFNGLUXTEXCOORDFORMATNVPROC glTexCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glEdgeFlagFormatNV
extern PFNGLUXEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorFormatNV
extern PFNGLUXSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
#endif
#ifndef __GLUX__GLFCT_glFogCoordFormatNV
extern PFNGLUXFOGCOORDFORMATNVPROC glFogCoordFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribFormatNV
extern PFNGLUXVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribIFormatNV
extern PFNGLUXVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
#endif
#ifndef __GLUX__GLFCT_glGetIntegerui64i_vNV
extern PFNGLUXGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
