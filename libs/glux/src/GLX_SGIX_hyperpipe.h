
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_SGIX_hyperpipe__
#define __GLUX_GLX_SGIX_hyperpipe__

GLUX_NEW_PLUGIN(GLX_SGIX_hyperpipe)
// --------------------------------------------------------
#if !(defined WIN32 || defined(_WIN64) || defined __APPLE__ || defined EMSCRIPTEN)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
#    define GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX 80
#  endif
#  ifndef GLX_BAD_HYPERPIPE_CONFIG_SGIX
#    define GLX_BAD_HYPERPIPE_CONFIG_SGIX 91
#  endif
#  ifndef GLX_BAD_HYPERPIPE_SGIX
#    define GLX_BAD_HYPERPIPE_SGIX 92
#  endif
#  ifndef GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
#    define GLX_HYPERPIPE_DISPLAY_PIPE_SGIX 0x00000001
#  endif
#  ifndef GLX_HYPERPIPE_RENDER_PIPE_SGIX
#    define GLX_HYPERPIPE_RENDER_PIPE_SGIX 0x00000002
#  endif
#  ifndef GLX_PIPE_RECT_SGIX
#    define GLX_PIPE_RECT_SGIX 0x00000001
#  endif
#  ifndef GLX_PIPE_RECT_LIMITS_SGIX
#    define GLX_PIPE_RECT_LIMITS_SGIX 0x00000002
#  endif
#  ifndef GLX_HYPERPIPE_STEREO_SGIX
#    define GLX_HYPERPIPE_STEREO_SGIX 0x00000003
#  endif
#  ifndef GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX
#    define GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX 0x00000004
#  endif
#  ifndef GLX_HYPERPIPE_ID_SGIX
#    define GLX_HYPERPIPE_ID_SGIX 0x8030
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXQueryHyperpipeNetworkSGIX
typedef GLXHyperpipeNetworkSGIX *(APIENTRYP PFNXGLUXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *npipes);
#endif
#ifndef __GLUX__GLFCT_glXHyperpipeConfigSGIX
typedef int (APIENTRYP PFNXGLUXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId);
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeConfigSGIX
typedef GLXHyperpipeConfigSGIX *(APIENTRYP PFNXGLUXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId, int *npipes);
#endif
#ifndef __GLUX__GLFCT_glXDestroyHyperpipeConfigSGIX
typedef int (APIENTRYP PFNXGLUXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId);
#endif
#ifndef __GLUX__GLFCT_glXBindHyperpipeSGIX
typedef int (APIENTRYP PFNXGLUXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId);
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeBestAttribSGIX
typedef int (APIENTRYP PFNXGLUXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList);
#endif
#ifndef __GLUX__GLFCT_glXHyperpipeAttribSGIX
typedef int (APIENTRYP PFNXGLUXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList);
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeAttribSGIX
typedef int (APIENTRYP PFNXGLUXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXQueryHyperpipeNetworkSGIX
extern PFNXGLUXQUERYHYPERPIPENETWORKSGIXPROC glXQueryHyperpipeNetworkSGIX;
#endif
#ifndef __GLUX__GLFCT_glXHyperpipeConfigSGIX
extern PFNXGLUXHYPERPIPECONFIGSGIXPROC glXHyperpipeConfigSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeConfigSGIX
extern PFNXGLUXQUERYHYPERPIPECONFIGSGIXPROC glXQueryHyperpipeConfigSGIX;
#endif
#ifndef __GLUX__GLFCT_glXDestroyHyperpipeConfigSGIX
extern PFNXGLUXDESTROYHYPERPIPECONFIGSGIXPROC glXDestroyHyperpipeConfigSGIX;
#endif
#ifndef __GLUX__GLFCT_glXBindHyperpipeSGIX
extern PFNXGLUXBINDHYPERPIPESGIXPROC glXBindHyperpipeSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeBestAttribSGIX
extern PFNXGLUXQUERYHYPERPIPEBESTATTRIBSGIXPROC glXQueryHyperpipeBestAttribSGIX;
#endif
#ifndef __GLUX__GLFCT_glXHyperpipeAttribSGIX
extern PFNXGLUXHYPERPIPEATTRIBSGIXPROC glXHyperpipeAttribSGIX;
#endif
#ifndef __GLUX__GLFCT_glXQueryHyperpipeAttribSGIX
extern PFNXGLUXQUERYHYPERPIPEATTRIBSGIXPROC glXQueryHyperpipeAttribSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
