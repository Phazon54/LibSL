
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_blend_equation_advanced__
#define __GLUX_GL_NV_blend_equation_advanced__

GLUX_NEW_PLUGIN(GL_NV_blend_equation_advanced)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_BLEND_OVERLAP_NV
#    define GL_BLEND_OVERLAP_NV 0x9281
#  endif
#  ifndef GL_BLEND_PREMULTIPLIED_SRC_NV
#    define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#  endif
#  ifndef GL_BLUE_NV
#    define GL_BLUE_NV 0x1905
#  endif
#  ifndef GL_COLORBURN_NV
#    define GL_COLORBURN_NV 0x929A
#  endif
#  ifndef GL_COLORDODGE_NV
#    define GL_COLORDODGE_NV 0x9299
#  endif
#  ifndef GL_CONJOINT_NV
#    define GL_CONJOINT_NV 0x9284
#  endif
#  ifndef GL_CONTRAST_NV
#    define GL_CONTRAST_NV 0x92A1
#  endif
#  ifndef GL_DARKEN_NV
#    define GL_DARKEN_NV 0x9297
#  endif
#  ifndef GL_DIFFERENCE_NV
#    define GL_DIFFERENCE_NV 0x929E
#  endif
#  ifndef GL_DISJOINT_NV
#    define GL_DISJOINT_NV 0x9283
#  endif
#  ifndef GL_DST_ATOP_NV
#    define GL_DST_ATOP_NV 0x928F
#  endif
#  ifndef GL_DST_IN_NV
#    define GL_DST_IN_NV 0x928B
#  endif
#  ifndef GL_DST_NV
#    define GL_DST_NV 0x9287
#  endif
#  ifndef GL_DST_OUT_NV
#    define GL_DST_OUT_NV 0x928D
#  endif
#  ifndef GL_DST_OVER_NV
#    define GL_DST_OVER_NV 0x9289
#  endif
#  ifndef GL_EXCLUSION_NV
#    define GL_EXCLUSION_NV 0x92A0
#  endif
#  ifndef GL_GREEN_NV
#    define GL_GREEN_NV 0x1904
#  endif
#  ifndef GL_HARDLIGHT_NV
#    define GL_HARDLIGHT_NV 0x929B
#  endif
#  ifndef GL_HARDMIX_NV
#    define GL_HARDMIX_NV 0x92A9
#  endif
#  ifndef GL_HSL_COLOR_NV
#    define GL_HSL_COLOR_NV 0x92AF
#  endif
#  ifndef GL_HSL_HUE_NV
#    define GL_HSL_HUE_NV 0x92AD
#  endif
#  ifndef GL_HSL_LUMINOSITY_NV
#    define GL_HSL_LUMINOSITY_NV 0x92B0
#  endif
#  ifndef GL_HSL_SATURATION_NV
#    define GL_HSL_SATURATION_NV 0x92AE
#  endif
#  ifndef GL_INVERT_OVG_NV
#    define GL_INVERT_OVG_NV 0x92B4
#  endif
#  ifndef GL_INVERT_RGB_NV
#    define GL_INVERT_RGB_NV 0x92A3
#  endif
#  ifndef GL_LIGHTEN_NV
#    define GL_LIGHTEN_NV 0x9298
#  endif
#  ifndef GL_LINEARBURN_NV
#    define GL_LINEARBURN_NV 0x92A5
#  endif
#  ifndef GL_LINEARDODGE_NV
#    define GL_LINEARDODGE_NV 0x92A4
#  endif
#  ifndef GL_LINEARLIGHT_NV
#    define GL_LINEARLIGHT_NV 0x92A7
#  endif
#  ifndef GL_MINUS_CLAMPED_NV
#    define GL_MINUS_CLAMPED_NV 0x92B3
#  endif
#  ifndef GL_MINUS_NV
#    define GL_MINUS_NV 0x929F
#  endif
#  ifndef GL_MULTIPLY_NV
#    define GL_MULTIPLY_NV 0x9294
#  endif
#  ifndef GL_OVERLAY_NV
#    define GL_OVERLAY_NV 0x9296
#  endif
#  ifndef GL_PINLIGHT_NV
#    define GL_PINLIGHT_NV 0x92A8
#  endif
#  ifndef GL_PLUS_CLAMPED_ALPHA_NV
#    define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#  endif
#  ifndef GL_PLUS_CLAMPED_NV
#    define GL_PLUS_CLAMPED_NV 0x92B1
#  endif
#  ifndef GL_PLUS_DARKER_NV
#    define GL_PLUS_DARKER_NV 0x9292
#  endif
#  ifndef GL_PLUS_NV
#    define GL_PLUS_NV 0x9291
#  endif
#  ifndef GL_RED_NV
#    define GL_RED_NV 0x1903
#  endif
#  ifndef GL_SCREEN_NV
#    define GL_SCREEN_NV 0x9295
#  endif
#  ifndef GL_SOFTLIGHT_NV
#    define GL_SOFTLIGHT_NV 0x929C
#  endif
#  ifndef GL_SRC_ATOP_NV
#    define GL_SRC_ATOP_NV 0x928E
#  endif
#  ifndef GL_SRC_IN_NV
#    define GL_SRC_IN_NV 0x928A
#  endif
#  ifndef GL_SRC_NV
#    define GL_SRC_NV 0x9286
#  endif
#  ifndef GL_SRC_OUT_NV
#    define GL_SRC_OUT_NV 0x928C
#  endif
#  ifndef GL_SRC_OVER_NV
#    define GL_SRC_OVER_NV 0x9288
#  endif
#  ifndef GL_UNCORRELATED_NV
#    define GL_UNCORRELATED_NV 0x9282
#  endif
#  ifndef GL_VIVIDLIGHT_NV
#    define GL_VIVIDLIGHT_NV 0x92A6
#  endif
#  ifndef GL_XOR_NV
#    define GL_XOR_NV 0x1506
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBlendParameteriNV
typedef void (APIENTRYP PFNGLUXBLENDPARAMETERINVPROC) (GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glBlendBarrierNV
typedef void (APIENTRYP PFNGLUXBLENDBARRIERNVPROC) (void);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBlendParameteriNV
extern PFNGLUXBLENDPARAMETERINVPROC glBlendParameteriNV;
#endif
#ifndef __GLUX__GLFCT_glBlendBarrierNV
extern PFNGLUXBLENDBARRIERNVPROC glBlendBarrierNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
