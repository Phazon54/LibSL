
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_transform_feedback__
#define __GLUX_GL_EXT_transform_feedback__

GLUX_NEW_PLUGIN(GL_EXT_transform_feedback)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_TRANSFORM_FEEDBACK_BUFFER_EXT
#    define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
#    define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
#    define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
#    define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#  endif
#  ifndef GL_INTERLEAVED_ATTRIBS_EXT
#    define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#  endif
#  ifndef GL_SEPARATE_ATTRIBS_EXT
#    define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#  endif
#  ifndef GL_PRIMITIVES_GENERATED_EXT
#    define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
#    define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#  endif
#  ifndef GL_RASTERIZER_DISCARD_EXT
#    define GL_RASTERIZER_DISCARD_EXT 0x8C89
#  endif
#  ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
#    define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#  endif
#  ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
#    define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#  endif
#  ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
#    define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
#    define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
#    define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
#    define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackEXT
typedef void (APIENTRYP PFNGLUXBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackEXT
typedef void (APIENTRYP PFNGLUXENDTRANSFORMFEEDBACKEXTPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeEXT
typedef void (APIENTRYP PFNGLUXBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetEXT
typedef void (APIENTRYP PFNGLUXBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseEXT
typedef void (APIENTRYP PFNGLUXBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsEXT
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingEXT
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginTransformFeedbackEXT
extern PFNGLUXBEGINTRANSFORMFEEDBACKEXTPROC glBeginTransformFeedbackEXT;
#endif
#ifndef __GLUX__GLFCT_glEndTransformFeedbackEXT
extern PFNGLUXENDTRANSFORMFEEDBACKEXTPROC glEndTransformFeedbackEXT;
#endif
#ifndef __GLUX__GLFCT_glBindBufferRangeEXT
extern PFNGLUXBINDBUFFERRANGEEXTPROC glBindBufferRangeEXT;
#endif
#ifndef __GLUX__GLFCT_glBindBufferOffsetEXT
extern PFNGLUXBINDBUFFEROFFSETEXTPROC glBindBufferOffsetEXT;
#endif
#ifndef __GLUX__GLFCT_glBindBufferBaseEXT
extern PFNGLUXBINDBUFFERBASEEXTPROC glBindBufferBaseEXT;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackVaryingsEXT
extern PFNGLUXTRANSFORMFEEDBACKVARYINGSEXTPROC glTransformFeedbackVaryingsEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackVaryingEXT
extern PFNGLUXGETTRANSFORMFEEDBACKVARYINGEXTPROC glGetTransformFeedbackVaryingEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
