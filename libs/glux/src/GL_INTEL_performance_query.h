
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_INTEL_performance_query__
#define __GLUX_GL_INTEL_performance_query__

GLUX_NEW_PLUGIN(GL_INTEL_performance_query)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_PERFQUERY_SINGLE_CONTEXT_INTEL
#    define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#  endif
#  ifndef GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
#    define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#  endif
#  ifndef GL_PERFQUERY_WAIT_INTEL
#    define GL_PERFQUERY_WAIT_INTEL 0x83FB
#  endif
#  ifndef GL_PERFQUERY_FLUSH_INTEL
#    define GL_PERFQUERY_FLUSH_INTEL 0x83FA
#  endif
#  ifndef GL_PERFQUERY_DONOT_FLUSH_INTEL
#    define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
#  endif
#  ifndef GL_PERFQUERY_COUNTER_EVENT_INTEL
#    define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
#    define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
#    define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#  endif
#  ifndef GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
#    define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#  endif
#  ifndef GL_PERFQUERY_COUNTER_RAW_INTEL
#    define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
#  endif
#  ifndef GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
#    define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
#    define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
#    define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
#    define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
#    define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
#    define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#  endif
#  ifndef GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
#    define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#  endif
#  ifndef GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
#    define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#  endif
#  ifndef GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
#    define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#  endif
#  ifndef GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
#    define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBeginPerfQueryINTEL
typedef void (APIENTRYP PFNGLUXBEGINPERFQUERYINTELPROC) (GLuint queryHandle);
#endif
#ifndef __GLUX__GLFCT_glCreatePerfQueryINTEL
typedef void (APIENTRYP PFNGLUXCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfQueryINTEL
typedef void (APIENTRYP PFNGLUXDELETEPERFQUERYINTELPROC) (GLuint queryHandle);
#endif
#ifndef __GLUX__GLFCT_glEndPerfQueryINTEL
typedef void (APIENTRYP PFNGLUXENDPERFQUERYINTELPROC) (GLuint queryHandle);
#endif
#ifndef __GLUX__GLFCT_glGetFirstPerfQueryIdINTEL
typedef void (APIENTRYP PFNGLUXGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);
#endif
#ifndef __GLUX__GLFCT_glGetNextPerfQueryIdINTEL
typedef void (APIENTRYP PFNGLUXGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);
#endif
#ifndef __GLUX__GLFCT_glGetPerfCounterInfoINTEL
typedef void (APIENTRYP PFNGLUXGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryDataINTEL
typedef void (APIENTRYP PFNGLUXGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryIdByNameINTEL
typedef void (APIENTRYP PFNGLUXGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryInfoINTEL
typedef void (APIENTRYP PFNGLUXGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBeginPerfQueryINTEL
extern PFNGLUXBEGINPERFQUERYINTELPROC glBeginPerfQueryINTEL;
#endif
#ifndef __GLUX__GLFCT_glCreatePerfQueryINTEL
extern PFNGLUXCREATEPERFQUERYINTELPROC glCreatePerfQueryINTEL;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfQueryINTEL
extern PFNGLUXDELETEPERFQUERYINTELPROC glDeletePerfQueryINTEL;
#endif
#ifndef __GLUX__GLFCT_glEndPerfQueryINTEL
extern PFNGLUXENDPERFQUERYINTELPROC glEndPerfQueryINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetFirstPerfQueryIdINTEL
extern PFNGLUXGETFIRSTPERFQUERYIDINTELPROC glGetFirstPerfQueryIdINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetNextPerfQueryIdINTEL
extern PFNGLUXGETNEXTPERFQUERYIDINTELPROC glGetNextPerfQueryIdINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetPerfCounterInfoINTEL
extern PFNGLUXGETPERFCOUNTERINFOINTELPROC glGetPerfCounterInfoINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryDataINTEL
extern PFNGLUXGETPERFQUERYDATAINTELPROC glGetPerfQueryDataINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryIdByNameINTEL
extern PFNGLUXGETPERFQUERYIDBYNAMEINTELPROC glGetPerfQueryIdByNameINTEL;
#endif
#ifndef __GLUX__GLFCT_glGetPerfQueryInfoINTEL
extern PFNGLUXGETPERFQUERYINFOINTELPROC glGetPerfQueryInfoINTEL;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
