
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_NV_bindless_texture__
#define __GLUX_GL_NV_bindless_texture__

GLUX_NEW_PLUGIN(GL_NV_bindless_texture)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetTextureHandleNV
typedef GLuint64 (APIENTRYP PFNGLUXGETTEXTUREHANDLENVPROC) (GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glGetTextureSamplerHandleNV
typedef GLuint64 (APIENTRYP PFNGLUXGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleResidentNV
typedef void (APIENTRYP PFNGLUXMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glGetImageHandleNV
typedef GLuint64 (APIENTRYP PFNGLUXGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleResidentNV
typedef void (APIENTRYP PFNGLUXMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleNonResidentNV
typedef void (APIENTRYP PFNGLUXMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64NV
typedef void (APIENTRYP PFNGLUXUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64vNV
typedef void (APIENTRYP PFNGLUXUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64NV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64vNV
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
#endif
#ifndef __GLUX__GLFCT_glIsTextureHandleResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glIsImageHandleResidentNV
typedef GLboolean (APIENTRYP PFNGLUXISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetTextureHandleNV
extern PFNGLUXGETTEXTUREHANDLENVPROC glGetTextureHandleNV;
#endif
#ifndef __GLUX__GLFCT_glGetTextureSamplerHandleNV
extern PFNGLUXGETTEXTURESAMPLERHANDLENVPROC glGetTextureSamplerHandleNV;
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleResidentNV
extern PFNGLUXMAKETEXTUREHANDLERESIDENTNVPROC glMakeTextureHandleResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleNonResidentNV
extern PFNGLUXMAKETEXTUREHANDLENONRESIDENTNVPROC glMakeTextureHandleNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glGetImageHandleNV
extern PFNGLUXGETIMAGEHANDLENVPROC glGetImageHandleNV;
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleResidentNV
extern PFNGLUXMAKEIMAGEHANDLERESIDENTNVPROC glMakeImageHandleResidentNV;
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleNonResidentNV
extern PFNGLUXMAKEIMAGEHANDLENONRESIDENTNVPROC glMakeImageHandleNonResidentNV;
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64NV
extern PFNGLUXUNIFORMHANDLEUI64NVPROC glUniformHandleui64NV;
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64vNV
extern PFNGLUXUNIFORMHANDLEUI64VNVPROC glUniformHandleui64vNV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64NV
extern PFNGLUXPROGRAMUNIFORMHANDLEUI64NVPROC glProgramUniformHandleui64NV;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64vNV
extern PFNGLUXPROGRAMUNIFORMHANDLEUI64VNVPROC glProgramUniformHandleui64vNV;
#endif
#ifndef __GLUX__GLFCT_glIsTextureHandleResidentNV
extern PFNGLUXISTEXTUREHANDLERESIDENTNVPROC glIsTextureHandleResidentNV;
#endif
#ifndef __GLUX__GLFCT_glIsImageHandleResidentNV
extern PFNGLUXISIMAGEHANDLERESIDENTNVPROC glIsImageHandleResidentNV;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
