
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_element_array__
#define __GLUX_GL_APPLE_element_array__

GLUX_NEW_PLUGIN(GL_APPLE_element_array)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_ELEMENT_ARRAY_APPLE
#    define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#  endif
#  ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#    define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#  endif
#  ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#    define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
typedef void (APIENTRYP PFNGLUXELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRYP PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glElementPointerAPPLE
extern PFNGLUXELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawElementArrayAPPLE
extern PFNGLUXDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDrawRangeElementArrayAPPLE
extern PFNGLUXDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawElementArrayAPPLE
extern PFNGLUXMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
#endif
#ifndef __GLUX__GLFCT_glMultiDrawRangeElementArrayAPPLE
extern PFNGLUXMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
