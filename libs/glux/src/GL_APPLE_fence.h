
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_APPLE_fence__
#define __GLUX_GL_APPLE_fence__

GLUX_NEW_PLUGIN(GL_APPLE_fence)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_DRAW_PIXELS_APPLE
#    define GL_DRAW_PIXELS_APPLE 0x8A0A
#  endif
#  ifndef GL_FENCE_APPLE
#    define GL_FENCE_APPLE 0x8A0B
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGenFencesAPPLE
typedef void (APIENTRYP PFNGLUXGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);
#endif
#ifndef __GLUX__GLFCT_glDeleteFencesAPPLE
typedef void (APIENTRYP PFNGLUXDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);
#endif
#ifndef __GLUX__GLFCT_glSetFenceAPPLE
typedef void (APIENTRYP PFNGLUXSETFENCEAPPLEPROC) (GLuint fence);
#endif
#ifndef __GLUX__GLFCT_glIsFenceAPPLE
typedef GLboolean (APIENTRYP PFNGLUXISFENCEAPPLEPROC) (GLuint fence);
#endif
#ifndef __GLUX__GLFCT_glTestFenceAPPLE
typedef GLboolean (APIENTRYP PFNGLUXTESTFENCEAPPLEPROC) (GLuint fence);
#endif
#ifndef __GLUX__GLFCT_glFinishFenceAPPLE
typedef void (APIENTRYP PFNGLUXFINISHFENCEAPPLEPROC) (GLuint fence);
#endif
#ifndef __GLUX__GLFCT_glTestObjectAPPLE
typedef GLboolean (APIENTRYP PFNGLUXTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);
#endif
#ifndef __GLUX__GLFCT_glFinishObjectAPPLE
typedef void (APIENTRYP PFNGLUXFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGenFencesAPPLE
extern PFNGLUXGENFENCESAPPLEPROC glGenFencesAPPLE;
#endif
#ifndef __GLUX__GLFCT_glDeleteFencesAPPLE
extern PFNGLUXDELETEFENCESAPPLEPROC glDeleteFencesAPPLE;
#endif
#ifndef __GLUX__GLFCT_glSetFenceAPPLE
extern PFNGLUXSETFENCEAPPLEPROC glSetFenceAPPLE;
#endif
#ifndef __GLUX__GLFCT_glIsFenceAPPLE
extern PFNGLUXISFENCEAPPLEPROC glIsFenceAPPLE;
#endif
#ifndef __GLUX__GLFCT_glTestFenceAPPLE
extern PFNGLUXTESTFENCEAPPLEPROC glTestFenceAPPLE;
#endif
#ifndef __GLUX__GLFCT_glFinishFenceAPPLE
extern PFNGLUXFINISHFENCEAPPLEPROC glFinishFenceAPPLE;
#endif
#ifndef __GLUX__GLFCT_glTestObjectAPPLE
extern PFNGLUXTESTOBJECTAPPLEPROC glTestObjectAPPLE;
#endif
#ifndef __GLUX__GLFCT_glFinishObjectAPPLE
extern PFNGLUXFINISHOBJECTAPPLEPROC glFinishObjectAPPLE;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
