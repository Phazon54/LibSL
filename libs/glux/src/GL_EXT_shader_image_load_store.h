
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_shader_image_load_store__
#define __GLUX_GL_EXT_shader_image_load_store__

GLUX_NEW_PLUGIN(GL_EXT_shader_image_load_store)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_MAX_IMAGE_UNITS_EXT
#    define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#  endif
#  ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
#    define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#  endif
#  ifndef GL_IMAGE_BINDING_NAME_EXT
#    define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#  endif
#  ifndef GL_IMAGE_BINDING_LEVEL_EXT
#    define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#  endif
#  ifndef GL_IMAGE_BINDING_LAYERED_EXT
#    define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#  endif
#  ifndef GL_IMAGE_BINDING_LAYER_EXT
#    define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#  endif
#  ifndef GL_IMAGE_BINDING_ACCESS_EXT
#    define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#  endif
#  ifndef GL_IMAGE_1D_EXT
#    define GL_IMAGE_1D_EXT 0x904C
#  endif
#  ifndef GL_IMAGE_2D_EXT
#    define GL_IMAGE_2D_EXT 0x904D
#  endif
#  ifndef GL_IMAGE_3D_EXT
#    define GL_IMAGE_3D_EXT 0x904E
#  endif
#  ifndef GL_IMAGE_2D_RECT_EXT
#    define GL_IMAGE_2D_RECT_EXT 0x904F
#  endif
#  ifndef GL_IMAGE_CUBE_EXT
#    define GL_IMAGE_CUBE_EXT 0x9050
#  endif
#  ifndef GL_IMAGE_BUFFER_EXT
#    define GL_IMAGE_BUFFER_EXT 0x9051
#  endif
#  ifndef GL_IMAGE_1D_ARRAY_EXT
#    define GL_IMAGE_1D_ARRAY_EXT 0x9052
#  endif
#  ifndef GL_IMAGE_2D_ARRAY_EXT
#    define GL_IMAGE_2D_ARRAY_EXT 0x9053
#  endif
#  ifndef GL_IMAGE_CUBE_MAP_ARRAY_EXT
#    define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#  endif
#  ifndef GL_IMAGE_2D_MULTISAMPLE_EXT
#    define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#  endif
#  ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#    define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#  endif
#  ifndef GL_INT_IMAGE_1D_EXT
#    define GL_INT_IMAGE_1D_EXT 0x9057
#  endif
#  ifndef GL_INT_IMAGE_2D_EXT
#    define GL_INT_IMAGE_2D_EXT 0x9058
#  endif
#  ifndef GL_INT_IMAGE_3D_EXT
#    define GL_INT_IMAGE_3D_EXT 0x9059
#  endif
#  ifndef GL_INT_IMAGE_2D_RECT_EXT
#    define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#  endif
#  ifndef GL_INT_IMAGE_CUBE_EXT
#    define GL_INT_IMAGE_CUBE_EXT 0x905B
#  endif
#  ifndef GL_INT_IMAGE_BUFFER_EXT
#    define GL_INT_IMAGE_BUFFER_EXT 0x905C
#  endif
#  ifndef GL_INT_IMAGE_1D_ARRAY_EXT
#    define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#  endif
#  ifndef GL_INT_IMAGE_2D_ARRAY_EXT
#    define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#  endif
#  ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#    define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#  endif
#  ifndef GL_INT_IMAGE_2D_MULTISAMPLE_EXT
#    define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#  endif
#  ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#    define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_1D_EXT
#    define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_2D_EXT
#    define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_3D_EXT
#    define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
#    define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_CUBE_EXT
#    define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
#    define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
#    define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
#    define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#    define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
#    define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#  endif
#  ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#    define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#  endif
#  ifndef GL_MAX_IMAGE_SAMPLES_EXT
#    define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#  endif
#  ifndef GL_IMAGE_BINDING_FORMAT_EXT
#    define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#  endif
#  ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
#    define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#  endif
#  ifndef GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
#    define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#  endif
#  ifndef GL_UNIFORM_BARRIER_BIT_EXT
#    define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#  endif
#  ifndef GL_TEXTURE_FETCH_BARRIER_BIT_EXT
#    define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#  endif
#  ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
#    define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#  endif
#  ifndef GL_COMMAND_BARRIER_BIT_EXT
#    define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#  endif
#  ifndef GL_PIXEL_BUFFER_BARRIER_BIT_EXT
#    define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#  endif
#  ifndef GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
#    define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#  endif
#  ifndef GL_BUFFER_UPDATE_BARRIER_BIT_EXT
#    define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#  endif
#  ifndef GL_FRAMEBUFFER_BARRIER_BIT_EXT
#    define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#  endif
#  ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
#    define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#  endif
#  ifndef GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
#    define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#  endif
#  ifndef GL_ALL_BARRIER_BITS_EXT
#    define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindImageTextureEXT
typedef void (APIENTRYP PFNGLUXBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
#endif
#ifndef __GLUX__GLFCT_glMemoryBarrierEXT
typedef void (APIENTRYP PFNGLUXMEMORYBARRIEREXTPROC) (GLbitfield barriers);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindImageTextureEXT
extern PFNGLUXBINDIMAGETEXTUREEXTPROC glBindImageTextureEXT;
#endif
#ifndef __GLUX__GLFCT_glMemoryBarrierEXT
extern PFNGLUXMEMORYBARRIEREXTPROC glMemoryBarrierEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
