
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:03 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_bindless_texture__
#define __GLUX_GL_ARB_bindless_texture__

GLUX_NEW_PLUGIN(GL_ARB_bindless_texture)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_UNSIGNED_INT64_ARB
#    define GL_UNSIGNED_INT64_ARB 0x140F
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetTextureHandleARB
typedef GLuint64 (APIENTRYP PFNGLUXGETTEXTUREHANDLEARBPROC) (GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glGetTextureSamplerHandleARB
typedef GLuint64 (APIENTRYP PFNGLUXGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleResidentARB
typedef void (APIENTRYP PFNGLUXMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleNonResidentARB
typedef void (APIENTRYP PFNGLUXMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glGetImageHandleARB
typedef GLuint64 (APIENTRYP PFNGLUXGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleResidentARB
typedef void (APIENTRYP PFNGLUXMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleNonResidentARB
typedef void (APIENTRYP PFNGLUXMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64ARB
typedef void (APIENTRYP PFNGLUXUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64vARB
typedef void (APIENTRYP PFNGLUXUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64ARB
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64vARB
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);
#endif
#ifndef __GLUX__GLFCT_glIsTextureHandleResidentARB
typedef GLboolean (APIENTRYP PFNGLUXISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glIsImageHandleResidentARB
typedef GLboolean (APIENTRYP PFNGLUXISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1ui64ARB
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1ui64vARB
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLui64vARB
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetTextureHandleARB
extern PFNGLUXGETTEXTUREHANDLEARBPROC glGetTextureHandleARB;
#endif
#ifndef __GLUX__GLFCT_glGetTextureSamplerHandleARB
extern PFNGLUXGETTEXTURESAMPLERHANDLEARBPROC glGetTextureSamplerHandleARB;
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleResidentARB
extern PFNGLUXMAKETEXTUREHANDLERESIDENTARBPROC glMakeTextureHandleResidentARB;
#endif
#ifndef __GLUX__GLFCT_glMakeTextureHandleNonResidentARB
extern PFNGLUXMAKETEXTUREHANDLENONRESIDENTARBPROC glMakeTextureHandleNonResidentARB;
#endif
#ifndef __GLUX__GLFCT_glGetImageHandleARB
extern PFNGLUXGETIMAGEHANDLEARBPROC glGetImageHandleARB;
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleResidentARB
extern PFNGLUXMAKEIMAGEHANDLERESIDENTARBPROC glMakeImageHandleResidentARB;
#endif
#ifndef __GLUX__GLFCT_glMakeImageHandleNonResidentARB
extern PFNGLUXMAKEIMAGEHANDLENONRESIDENTARBPROC glMakeImageHandleNonResidentARB;
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64ARB
extern PFNGLUXUNIFORMHANDLEUI64ARBPROC glUniformHandleui64ARB;
#endif
#ifndef __GLUX__GLFCT_glUniformHandleui64vARB
extern PFNGLUXUNIFORMHANDLEUI64VARBPROC glUniformHandleui64vARB;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64ARB
extern PFNGLUXPROGRAMUNIFORMHANDLEUI64ARBPROC glProgramUniformHandleui64ARB;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformHandleui64vARB
extern PFNGLUXPROGRAMUNIFORMHANDLEUI64VARBPROC glProgramUniformHandleui64vARB;
#endif
#ifndef __GLUX__GLFCT_glIsTextureHandleResidentARB
extern PFNGLUXISTEXTUREHANDLERESIDENTARBPROC glIsTextureHandleResidentARB;
#endif
#ifndef __GLUX__GLFCT_glIsImageHandleResidentARB
extern PFNGLUXISIMAGEHANDLERESIDENTARBPROC glIsImageHandleResidentARB;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1ui64ARB
extern PFNGLUXVERTEXATTRIBL1UI64ARBPROC glVertexAttribL1ui64ARB;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1ui64vARB
extern PFNGLUXVERTEXATTRIBL1UI64VARBPROC glVertexAttribL1ui64vARB;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLui64vARB
extern PFNGLUXGETVERTEXATTRIBLUI64VARBPROC glGetVertexAttribLui64vARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
