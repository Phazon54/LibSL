
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_memory_object__
#define __GLUX_GL_EXT_memory_object__

GLUX_NEW_PLUGIN(GL_EXT_memory_object)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_TEXTURE_TILING_EXT
#    define GL_TEXTURE_TILING_EXT 0x9580
#  endif
#  ifndef GL_DEDICATED_MEMORY_OBJECT_EXT
#    define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
#  endif
#  ifndef GL_PROTECTED_MEMORY_OBJECT_EXT
#    define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
#  endif
#  ifndef GL_NUM_TILING_TYPES_EXT
#    define GL_NUM_TILING_TYPES_EXT 0x9582
#  endif
#  ifndef GL_TILING_TYPES_EXT
#    define GL_TILING_TYPES_EXT 0x9583
#  endif
#  ifndef GL_OPTIMAL_TILING_EXT
#    define GL_OPTIMAL_TILING_EXT 0x9584
#  endif
#  ifndef GL_LINEAR_TILING_EXT
#    define GL_LINEAR_TILING_EXT 0x9585
#  endif
#  ifndef GL_NUM_DEVICE_UUIDS_EXT
#    define GL_NUM_DEVICE_UUIDS_EXT 0x9596
#  endif
#  ifndef GL_DEVICE_UUID_EXT
#    define GL_DEVICE_UUID_EXT 0x9597
#  endif
#  ifndef GL_DRIVER_UUID_EXT
#    define GL_DRIVER_UUID_EXT 0x9598
#  endif
#  ifndef GL_UUID_SIZE_EXT
#    define GL_UUID_SIZE_EXT 16
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetUnsignedBytevEXT
typedef void (APIENTRYP PFNGLUXGETUNSIGNEDBYTEVEXTPROC) (GLenum pname, GLubyte *data);
#endif
#ifndef __GLUX__GLFCT_glGetUnsignedBytei_vEXT
typedef void (APIENTRYP PFNGLUXGETUNSIGNEDBYTEI_VEXTPROC) (GLenum target, GLuint index, GLubyte *data);
#endif
#ifndef __GLUX__GLFCT_glDeleteMemoryObjectsEXT
typedef void (APIENTRYP PFNGLUXDELETEMEMORYOBJECTSEXTPROC) (GLsizei n, const GLuint *memoryObjects);
#endif
#ifndef __GLUX__GLFCT_glIsMemoryObjectEXT
typedef GLboolean (APIENTRYP PFNGLUXISMEMORYOBJECTEXTPROC) (GLuint memoryObject);
#endif
#ifndef __GLUX__GLFCT_glCreateMemoryObjectsEXT
typedef void (APIENTRYP PFNGLUXCREATEMEMORYOBJECTSEXTPROC) (GLsizei n, GLuint *memoryObjects);
#endif
#ifndef __GLUX__GLFCT_glMemoryObjectParameterivEXT
typedef void (APIENTRYP PFNGLUXMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMemoryObjectParameterivEXT
typedef void (APIENTRYP PFNGLUXGETMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem2DEXT
typedef void (APIENTRYP PFNGLUXTEXSTORAGEMEM2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem2DMultisampleEXT
typedef void (APIENTRYP PFNGLUXTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem3DEXT
typedef void (APIENTRYP PFNGLUXTEXSTORAGEMEM3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem3DMultisampleEXT
typedef void (APIENTRYP PFNGLUXTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glBufferStorageMemEXT
typedef void (APIENTRYP PFNGLUXBUFFERSTORAGEMEMEXTPROC) (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem2DEXT
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGEMEM2DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem2DMultisampleEXT
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem3DEXT
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGEMEM3DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem3DMultisampleEXT
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glNamedBufferStorageMemEXT
typedef void (APIENTRYP PFNGLUXNAMEDBUFFERSTORAGEMEMEXTPROC) (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem1DEXT
typedef void (APIENTRYP PFNGLUXTEXSTORAGEMEM1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem1DEXT
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGEMEM1DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetUnsignedBytevEXT
extern PFNGLUXGETUNSIGNEDBYTEVEXTPROC glGetUnsignedBytevEXT;
#endif
#ifndef __GLUX__GLFCT_glGetUnsignedBytei_vEXT
extern PFNGLUXGETUNSIGNEDBYTEI_VEXTPROC glGetUnsignedBytei_vEXT;
#endif
#ifndef __GLUX__GLFCT_glDeleteMemoryObjectsEXT
extern PFNGLUXDELETEMEMORYOBJECTSEXTPROC glDeleteMemoryObjectsEXT;
#endif
#ifndef __GLUX__GLFCT_glIsMemoryObjectEXT
extern PFNGLUXISMEMORYOBJECTEXTPROC glIsMemoryObjectEXT;
#endif
#ifndef __GLUX__GLFCT_glCreateMemoryObjectsEXT
extern PFNGLUXCREATEMEMORYOBJECTSEXTPROC glCreateMemoryObjectsEXT;
#endif
#ifndef __GLUX__GLFCT_glMemoryObjectParameterivEXT
extern PFNGLUXMEMORYOBJECTPARAMETERIVEXTPROC glMemoryObjectParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetMemoryObjectParameterivEXT
extern PFNGLUXGETMEMORYOBJECTPARAMETERIVEXTPROC glGetMemoryObjectParameterivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem2DEXT
extern PFNGLUXTEXSTORAGEMEM2DEXTPROC glTexStorageMem2DEXT;
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem2DMultisampleEXT
extern PFNGLUXTEXSTORAGEMEM2DMULTISAMPLEEXTPROC glTexStorageMem2DMultisampleEXT;
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem3DEXT
extern PFNGLUXTEXSTORAGEMEM3DEXTPROC glTexStorageMem3DEXT;
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem3DMultisampleEXT
extern PFNGLUXTEXSTORAGEMEM3DMULTISAMPLEEXTPROC glTexStorageMem3DMultisampleEXT;
#endif
#ifndef __GLUX__GLFCT_glBufferStorageMemEXT
extern PFNGLUXBUFFERSTORAGEMEMEXTPROC glBufferStorageMemEXT;
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem2DEXT
extern PFNGLUXTEXTURESTORAGEMEM2DEXTPROC glTextureStorageMem2DEXT;
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem2DMultisampleEXT
extern PFNGLUXTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC glTextureStorageMem2DMultisampleEXT;
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem3DEXT
extern PFNGLUXTEXTURESTORAGEMEM3DEXTPROC glTextureStorageMem3DEXT;
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem3DMultisampleEXT
extern PFNGLUXTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC glTextureStorageMem3DMultisampleEXT;
#endif
#ifndef __GLUX__GLFCT_glNamedBufferStorageMemEXT
extern PFNGLUXNAMEDBUFFERSTORAGEMEMEXTPROC glNamedBufferStorageMemEXT;
#endif
#ifndef __GLUX__GLFCT_glTexStorageMem1DEXT
extern PFNGLUXTEXSTORAGEMEM1DEXTPROC glTexStorageMem1DEXT;
#endif
#ifndef __GLUX__GLFCT_glTextureStorageMem1DEXT
extern PFNGLUXTEXTURESTORAGEMEM1DEXTPROC glTextureStorageMem1DEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
