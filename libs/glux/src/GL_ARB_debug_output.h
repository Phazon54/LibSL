
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_debug_output__
#define __GLUX_GL_ARB_debug_output__

GLUX_NEW_PLUGIN(GL_ARB_debug_output)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
#    define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#  endif
#  ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
#    define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#  endif
#  ifndef GL_DEBUG_CALLBACK_FUNCTION_ARB
#    define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#  endif
#  ifndef GL_DEBUG_CALLBACK_USER_PARAM_ARB
#    define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#  endif
#  ifndef GL_DEBUG_SOURCE_API_ARB
#    define GL_DEBUG_SOURCE_API_ARB 0x8246
#  endif
#  ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
#    define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#  endif
#  ifndef GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
#    define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#  endif
#  ifndef GL_DEBUG_SOURCE_THIRD_PARTY_ARB
#    define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#  endif
#  ifndef GL_DEBUG_SOURCE_APPLICATION_ARB
#    define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#  endif
#  ifndef GL_DEBUG_SOURCE_OTHER_ARB
#    define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#  endif
#  ifndef GL_DEBUG_TYPE_ERROR_ARB
#    define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#  endif
#  ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
#    define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#  endif
#  ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
#    define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#  endif
#  ifndef GL_DEBUG_TYPE_PORTABILITY_ARB
#    define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#  endif
#  ifndef GL_DEBUG_TYPE_PERFORMANCE_ARB
#    define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#  endif
#  ifndef GL_DEBUG_TYPE_OTHER_ARB
#    define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#  endif
#  ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
#    define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#  endif
#  ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
#    define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#  endif
#  ifndef GL_DEBUG_LOGGED_MESSAGES_ARB
#    define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#  endif
#  ifndef GL_DEBUG_SEVERITY_HIGH_ARB
#    define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#  endif
#  ifndef GL_DEBUG_SEVERITY_MEDIUM_ARB
#    define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#  endif
#  ifndef GL_DEBUG_SEVERITY_LOW_ARB
#    define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glDebugMessageControlARB
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertARB
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackARB
typedef void (APIENTRYP PFNGLUXDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogARB
typedef GLuint (APIENTRYP PFNGLUXGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glDebugMessageControlARB
extern PFNGLUXDEBUGMESSAGECONTROLARBPROC glDebugMessageControlARB;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageInsertARB
extern PFNGLUXDEBUGMESSAGEINSERTARBPROC glDebugMessageInsertARB;
#endif
#ifndef __GLUX__GLFCT_glDebugMessageCallbackARB
extern PFNGLUXDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB;
#endif
#ifndef __GLUX__GLFCT_glGetDebugMessageLogARB
extern PFNGLUXGETDEBUGMESSAGELOGARBPROC glGetDebugMessageLogARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
