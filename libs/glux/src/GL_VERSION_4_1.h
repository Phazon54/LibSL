
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_1__
#define __GLUX_GL_VERSION_4_1__

GLUX_NEW_PLUGIN(GL_VERSION_4_1)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_FIXED
#    define GL_FIXED 0x140C
#  endif
#  ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#    define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#  endif
#  ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#    define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#  endif
#  ifndef GL_LOW_FLOAT
#    define GL_LOW_FLOAT 0x8DF0
#  endif
#  ifndef GL_MEDIUM_FLOAT
#    define GL_MEDIUM_FLOAT 0x8DF1
#  endif
#  ifndef GL_HIGH_FLOAT
#    define GL_HIGH_FLOAT 0x8DF2
#  endif
#  ifndef GL_LOW_INT
#    define GL_LOW_INT 0x8DF3
#  endif
#  ifndef GL_MEDIUM_INT
#    define GL_MEDIUM_INT 0x8DF4
#  endif
#  ifndef GL_HIGH_INT
#    define GL_HIGH_INT 0x8DF5
#  endif
#  ifndef GL_SHADER_COMPILER
#    define GL_SHADER_COMPILER 0x8DFA
#  endif
#  ifndef GL_SHADER_BINARY_FORMATS
#    define GL_SHADER_BINARY_FORMATS 0x8DF8
#  endif
#  ifndef GL_NUM_SHADER_BINARY_FORMATS
#    define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#  endif
#  ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#    define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#  endif
#  ifndef GL_MAX_VARYING_VECTORS
#    define GL_MAX_VARYING_VECTORS 0x8DFC
#  endif
#  ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#    define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#  endif
#  ifndef GL_RGB565
#    define GL_RGB565 0x8D62
#  endif
#  ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#    define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#  endif
#  ifndef GL_PROGRAM_BINARY_LENGTH
#    define GL_PROGRAM_BINARY_LENGTH 0x8741
#  endif
#  ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#    define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#  endif
#  ifndef GL_PROGRAM_BINARY_FORMATS
#    define GL_PROGRAM_BINARY_FORMATS 0x87FF
#  endif
#  ifndef GL_VERTEX_SHADER_BIT
#    define GL_VERTEX_SHADER_BIT 0x00000001
#  endif
#  ifndef GL_FRAGMENT_SHADER_BIT
#    define GL_FRAGMENT_SHADER_BIT 0x00000002
#  endif
#  ifndef GL_GEOMETRY_SHADER_BIT
#    define GL_GEOMETRY_SHADER_BIT 0x00000004
#  endif
#  ifndef GL_TESS_CONTROL_SHADER_BIT
#    define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#  endif
#  ifndef GL_TESS_EVALUATION_SHADER_BIT
#    define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#  endif
#  ifndef GL_ALL_SHADER_BITS
#    define GL_ALL_SHADER_BITS 0xFFFFFFFF
#  endif
#  ifndef GL_PROGRAM_SEPARABLE
#    define GL_PROGRAM_SEPARABLE 0x8258
#  endif
#  ifndef GL_ACTIVE_PROGRAM
#    define GL_ACTIVE_PROGRAM 0x8259
#  endif
#  ifndef GL_PROGRAM_PIPELINE_BINDING
#    define GL_PROGRAM_PIPELINE_BINDING 0x825A
#  endif
#  ifndef GL_MAX_VIEWPORTS
#    define GL_MAX_VIEWPORTS 0x825B
#  endif
#  ifndef GL_VIEWPORT_SUBPIXEL_BITS
#    define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#  endif
#  ifndef GL_VIEWPORT_BOUNDS_RANGE
#    define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#  endif
#  ifndef GL_LAYER_PROVOKING_VERTEX
#    define GL_LAYER_PROVOKING_VERTEX 0x825E
#  endif
#  ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#    define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#  endif
#  ifndef GL_UNDEFINED_VERTEX
#    define GL_UNDEFINED_VERTEX 0x8260
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
typedef void (APIENTRYP PFNGLUXRELEASESHADERCOMPILERPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
typedef void (APIENTRYP PFNGLUXSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
typedef void (APIENTRYP PFNGLUXGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
typedef void (APIENTRYP PFNGLUXDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
typedef void (APIENTRYP PFNGLUXCLEARDEPTHFPROC) (GLfloat d);
#endif
#ifndef __GLUX__GLFCT_glGetProgramBinary
typedef void (APIENTRYP PFNGLUXGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
#endif
#ifndef __GLUX__GLFCT_glProgramBinary
typedef void (APIENTRYP PFNGLUXPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
#endif
#ifndef __GLUX__GLFCT_glProgramParameteri
typedef void (APIENTRYP PFNGLUXPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);
#endif
#ifndef __GLUX__GLFCT_glUseProgramStages
typedef void (APIENTRYP PFNGLUXUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);
#endif
#ifndef __GLUX__GLFCT_glActiveShaderProgram
typedef void (APIENTRYP PFNGLUXACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);
#endif
#ifndef __GLUX__GLFCT_glCreateShaderProgramv
typedef GLuint (APIENTRYP PFNGLUXCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);
#endif
#ifndef __GLUX__GLFCT_glBindProgramPipeline
typedef void (APIENTRYP PFNGLUXBINDPROGRAMPIPELINEPROC) (GLuint pipeline);
#endif
#ifndef __GLUX__GLFCT_glDeleteProgramPipelines
typedef void (APIENTRYP PFNGLUXDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);
#endif
#ifndef __GLUX__GLFCT_glGenProgramPipelines
typedef void (APIENTRYP PFNGLUXGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
#endif
#ifndef __GLUX__GLFCT_glIsProgramPipeline
typedef GLboolean (APIENTRYP PFNGLUXISPROGRAMPIPELINEPROC) (GLuint pipeline);
#endif
#ifndef __GLUX__GLFCT_glGetProgramPipelineiv
typedef void (APIENTRYP PFNGLUXGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1i
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1iv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1f
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1d
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1ui
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1uiv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2i
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2iv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2f
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2d
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2ui
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2uiv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3i
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3iv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3f
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3d
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3ui
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3uiv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4i
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4iv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4f
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4d
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4ui
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4uiv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x3fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x2fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x4fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x2fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x4fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x3fv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x3dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x2dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x4dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x2dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x4dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x3dv
typedef void (APIENTRYP PFNGLUXPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
#endif
#ifndef __GLUX__GLFCT_glValidateProgramPipeline
typedef void (APIENTRYP PFNGLUXVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);
#endif
#ifndef __GLUX__GLFCT_glGetProgramPipelineInfoLog
typedef void (APIENTRYP PFNGLUXGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4d
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointer
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdv
typedef void (APIENTRYP PFNGLUXGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glViewportArrayv
typedef void (APIENTRYP PFNGLUXVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
typedef void (APIENTRYP PFNGLUXVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
typedef void (APIENTRYP PFNGLUXSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
typedef void (APIENTRYP PFNGLUXSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
typedef void (APIENTRYP PFNGLUXDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
typedef void (APIENTRYP PFNGLUXDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
typedef void (APIENTRYP PFNGLUXGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
typedef void (APIENTRYP PFNGLUXGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glReleaseShaderCompiler
extern PFNGLUXRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifndef __GLUX__GLFCT_glShaderBinary
extern PFNGLUXSHADERBINARYPROC glShaderBinary;
#endif
#ifndef __GLUX__GLFCT_glGetShaderPrecisionFormat
extern PFNGLUXGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifndef __GLUX__GLFCT_glDepthRangef
extern PFNGLUXDEPTHRANGEFPROC glDepthRangef;
#endif
#ifndef __GLUX__GLFCT_glClearDepthf
extern PFNGLUXCLEARDEPTHFPROC glClearDepthf;
#endif
#ifndef __GLUX__GLFCT_glGetProgramBinary
extern PFNGLUXGETPROGRAMBINARYPROC glGetProgramBinary;
#endif
#ifndef __GLUX__GLFCT_glProgramBinary
extern PFNGLUXPROGRAMBINARYPROC glProgramBinary;
#endif
#ifndef __GLUX__GLFCT_glProgramParameteri
extern PFNGLUXPROGRAMPARAMETERIPROC glProgramParameteri;
#endif
#ifndef __GLUX__GLFCT_glUseProgramStages
extern PFNGLUXUSEPROGRAMSTAGESPROC glUseProgramStages;
#endif
#ifndef __GLUX__GLFCT_glActiveShaderProgram
extern PFNGLUXACTIVESHADERPROGRAMPROC glActiveShaderProgram;
#endif
#ifndef __GLUX__GLFCT_glCreateShaderProgramv
extern PFNGLUXCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
#endif
#ifndef __GLUX__GLFCT_glBindProgramPipeline
extern PFNGLUXBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
#endif
#ifndef __GLUX__GLFCT_glDeleteProgramPipelines
extern PFNGLUXDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
#endif
#ifndef __GLUX__GLFCT_glGenProgramPipelines
extern PFNGLUXGENPROGRAMPIPELINESPROC glGenProgramPipelines;
#endif
#ifndef __GLUX__GLFCT_glIsProgramPipeline
extern PFNGLUXISPROGRAMPIPELINEPROC glIsProgramPipeline;
#endif
#ifndef __GLUX__GLFCT_glGetProgramPipelineiv
extern PFNGLUXGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1i
extern PFNGLUXPROGRAMUNIFORM1IPROC glProgramUniform1i;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1iv
extern PFNGLUXPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1f
extern PFNGLUXPROGRAMUNIFORM1FPROC glProgramUniform1f;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1fv
extern PFNGLUXPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1d
extern PFNGLUXPROGRAMUNIFORM1DPROC glProgramUniform1d;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1dv
extern PFNGLUXPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1ui
extern PFNGLUXPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform1uiv
extern PFNGLUXPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2i
extern PFNGLUXPROGRAMUNIFORM2IPROC glProgramUniform2i;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2iv
extern PFNGLUXPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2f
extern PFNGLUXPROGRAMUNIFORM2FPROC glProgramUniform2f;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2fv
extern PFNGLUXPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2d
extern PFNGLUXPROGRAMUNIFORM2DPROC glProgramUniform2d;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2dv
extern PFNGLUXPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2ui
extern PFNGLUXPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform2uiv
extern PFNGLUXPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3i
extern PFNGLUXPROGRAMUNIFORM3IPROC glProgramUniform3i;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3iv
extern PFNGLUXPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3f
extern PFNGLUXPROGRAMUNIFORM3FPROC glProgramUniform3f;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3fv
extern PFNGLUXPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3d
extern PFNGLUXPROGRAMUNIFORM3DPROC glProgramUniform3d;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3dv
extern PFNGLUXPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3ui
extern PFNGLUXPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform3uiv
extern PFNGLUXPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4i
extern PFNGLUXPROGRAMUNIFORM4IPROC glProgramUniform4i;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4iv
extern PFNGLUXPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4f
extern PFNGLUXPROGRAMUNIFORM4FPROC glProgramUniform4f;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4fv
extern PFNGLUXPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4d
extern PFNGLUXPROGRAMUNIFORM4DPROC glProgramUniform4d;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4dv
extern PFNGLUXPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4ui
extern PFNGLUXPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
#endif
#ifndef __GLUX__GLFCT_glProgramUniform4uiv
extern PFNGLUXPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2fv
extern PFNGLUXPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3fv
extern PFNGLUXPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4fv
extern PFNGLUXPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2dv
extern PFNGLUXPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3dv
extern PFNGLUXPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4dv
extern PFNGLUXPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x3fv
extern PFNGLUXPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x2fv
extern PFNGLUXPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x4fv
extern PFNGLUXPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x2fv
extern PFNGLUXPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x4fv
extern PFNGLUXPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x3fv
extern PFNGLUXPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x3dv
extern PFNGLUXPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x2dv
extern PFNGLUXPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix2x4dv
extern PFNGLUXPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x2dv
extern PFNGLUXPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix3x4dv
extern PFNGLUXPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
#endif
#ifndef __GLUX__GLFCT_glProgramUniformMatrix4x3dv
extern PFNGLUXPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
#endif
#ifndef __GLUX__GLFCT_glValidateProgramPipeline
extern PFNGLUXVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
#endif
#ifndef __GLUX__GLFCT_glGetProgramPipelineInfoLog
extern PFNGLUXGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1d
extern PFNGLUXVERTEXATTRIBL1DPROC glVertexAttribL1d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2d
extern PFNGLUXVERTEXATTRIBL2DPROC glVertexAttribL2d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3d
extern PFNGLUXVERTEXATTRIBL3DPROC glVertexAttribL3d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4d
extern PFNGLUXVERTEXATTRIBL4DPROC glVertexAttribL4d;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL1dv
extern PFNGLUXVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL2dv
extern PFNGLUXVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL3dv
extern PFNGLUXVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribL4dv
extern PFNGLUXVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribLPointer
extern PFNGLUXVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
#endif
#ifndef __GLUX__GLFCT_glGetVertexAttribLdv
extern PFNGLUXGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
#endif
#ifndef __GLUX__GLFCT_glViewportArrayv
extern PFNGLUXVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedf
extern PFNGLUXVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifndef __GLUX__GLFCT_glViewportIndexedfv
extern PFNGLUXVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifndef __GLUX__GLFCT_glScissorArrayv
extern PFNGLUXSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexed
extern PFNGLUXSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifndef __GLUX__GLFCT_glScissorIndexedv
extern PFNGLUXSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeArrayv
extern PFNGLUXDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifndef __GLUX__GLFCT_glDepthRangeIndexed
extern PFNGLUXDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFloati_v
extern PFNGLUXGETFLOATI_VPROC glGetFloati_v;
#endif
#ifndef __GLUX__GLFCT_glGetDoublei_v
extern PFNGLUXGETDOUBLEI_VPROC glGetDoublei_v;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
