
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_imaging__
#define __GLUX_GL_ARB_imaging__

GLUX_NEW_PLUGIN(GL_ARB_imaging)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_BLEND_COLOR
#    define GL_BLEND_COLOR 0x8005
#  endif
#  ifndef GL_BLEND_EQUATION
#    define GL_BLEND_EQUATION 0x8009
#  endif
#  ifndef GL_CONVOLUTION_1D
#    define GL_CONVOLUTION_1D 0x8010
#  endif
#  ifndef GL_CONVOLUTION_2D
#    define GL_CONVOLUTION_2D 0x8011
#  endif
#  ifndef GL_SEPARABLE_2D
#    define GL_SEPARABLE_2D 0x8012
#  endif
#  ifndef GL_CONVOLUTION_BORDER_MODE
#    define GL_CONVOLUTION_BORDER_MODE 0x8013
#  endif
#  ifndef GL_CONVOLUTION_FILTER_SCALE
#    define GL_CONVOLUTION_FILTER_SCALE 0x8014
#  endif
#  ifndef GL_CONVOLUTION_FILTER_BIAS
#    define GL_CONVOLUTION_FILTER_BIAS 0x8015
#  endif
#  ifndef GL_REDUCE
#    define GL_REDUCE 0x8016
#  endif
#  ifndef GL_CONVOLUTION_FORMAT
#    define GL_CONVOLUTION_FORMAT 0x8017
#  endif
#  ifndef GL_CONVOLUTION_WIDTH
#    define GL_CONVOLUTION_WIDTH 0x8018
#  endif
#  ifndef GL_CONVOLUTION_HEIGHT
#    define GL_CONVOLUTION_HEIGHT 0x8019
#  endif
#  ifndef GL_MAX_CONVOLUTION_WIDTH
#    define GL_MAX_CONVOLUTION_WIDTH 0x801A
#  endif
#  ifndef GL_MAX_CONVOLUTION_HEIGHT
#    define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#  endif
#  ifndef GL_POST_CONVOLUTION_RED_SCALE
#    define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#  endif
#  ifndef GL_POST_CONVOLUTION_GREEN_SCALE
#    define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#  endif
#  ifndef GL_POST_CONVOLUTION_BLUE_SCALE
#    define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#  endif
#  ifndef GL_POST_CONVOLUTION_ALPHA_SCALE
#    define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#  endif
#  ifndef GL_POST_CONVOLUTION_RED_BIAS
#    define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#  endif
#  ifndef GL_POST_CONVOLUTION_GREEN_BIAS
#    define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#  endif
#  ifndef GL_POST_CONVOLUTION_BLUE_BIAS
#    define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#  endif
#  ifndef GL_POST_CONVOLUTION_ALPHA_BIAS
#    define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#  endif
#  ifndef GL_HISTOGRAM
#    define GL_HISTOGRAM 0x8024
#  endif
#  ifndef GL_PROXY_HISTOGRAM
#    define GL_PROXY_HISTOGRAM 0x8025
#  endif
#  ifndef GL_HISTOGRAM_WIDTH
#    define GL_HISTOGRAM_WIDTH 0x8026
#  endif
#  ifndef GL_HISTOGRAM_FORMAT
#    define GL_HISTOGRAM_FORMAT 0x8027
#  endif
#  ifndef GL_HISTOGRAM_RED_SIZE
#    define GL_HISTOGRAM_RED_SIZE 0x8028
#  endif
#  ifndef GL_HISTOGRAM_GREEN_SIZE
#    define GL_HISTOGRAM_GREEN_SIZE 0x8029
#  endif
#  ifndef GL_HISTOGRAM_BLUE_SIZE
#    define GL_HISTOGRAM_BLUE_SIZE 0x802A
#  endif
#  ifndef GL_HISTOGRAM_ALPHA_SIZE
#    define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#  endif
#  ifndef GL_HISTOGRAM_LUMINANCE_SIZE
#    define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#  endif
#  ifndef GL_HISTOGRAM_SINK
#    define GL_HISTOGRAM_SINK 0x802D
#  endif
#  ifndef GL_MINMAX
#    define GL_MINMAX 0x802E
#  endif
#  ifndef GL_MINMAX_FORMAT
#    define GL_MINMAX_FORMAT 0x802F
#  endif
#  ifndef GL_MINMAX_SINK
#    define GL_MINMAX_SINK 0x8030
#  endif
#  ifndef GL_TABLE_TOO_LARGE
#    define GL_TABLE_TOO_LARGE 0x8031
#  endif
#  ifndef GL_COLOR_MATRIX
#    define GL_COLOR_MATRIX 0x80B1
#  endif
#  ifndef GL_COLOR_MATRIX_STACK_DEPTH
#    define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#  endif
#  ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH
#    define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#  endif
#  ifndef GL_POST_COLOR_MATRIX_RED_SCALE
#    define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#  endif
#  ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE
#    define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#  endif
#  ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE
#    define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#  endif
#  ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE
#    define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#  endif
#  ifndef GL_POST_COLOR_MATRIX_RED_BIAS
#    define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#  endif
#  ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS
#    define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#  endif
#  ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS
#    define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#  endif
#  ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS
#    define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#  endif
#  ifndef GL_COLOR_TABLE
#    define GL_COLOR_TABLE 0x80D0
#  endif
#  ifndef GL_POST_CONVOLUTION_COLOR_TABLE
#    define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#  endif
#  ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE
#    define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#  endif
#  ifndef GL_PROXY_COLOR_TABLE
#    define GL_PROXY_COLOR_TABLE 0x80D3
#  endif
#  ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
#    define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#  endif
#  ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
#    define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#  endif
#  ifndef GL_COLOR_TABLE_SCALE
#    define GL_COLOR_TABLE_SCALE 0x80D6
#  endif
#  ifndef GL_COLOR_TABLE_BIAS
#    define GL_COLOR_TABLE_BIAS 0x80D7
#  endif
#  ifndef GL_COLOR_TABLE_FORMAT
#    define GL_COLOR_TABLE_FORMAT 0x80D8
#  endif
#  ifndef GL_COLOR_TABLE_WIDTH
#    define GL_COLOR_TABLE_WIDTH 0x80D9
#  endif
#  ifndef GL_COLOR_TABLE_RED_SIZE
#    define GL_COLOR_TABLE_RED_SIZE 0x80DA
#  endif
#  ifndef GL_COLOR_TABLE_GREEN_SIZE
#    define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#  endif
#  ifndef GL_COLOR_TABLE_BLUE_SIZE
#    define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#  endif
#  ifndef GL_COLOR_TABLE_ALPHA_SIZE
#    define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#  endif
#  ifndef GL_COLOR_TABLE_LUMINANCE_SIZE
#    define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#  endif
#  ifndef GL_COLOR_TABLE_INTENSITY_SIZE
#    define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#  endif
#  ifndef GL_CONSTANT_BORDER
#    define GL_CONSTANT_BORDER 0x8151
#  endif
#  ifndef GL_REPLICATE_BORDER
#    define GL_REPLICATE_BORDER 0x8153
#  endif
#  ifndef GL_CONVOLUTION_BORDER_COLOR
#    define GL_CONVOLUTION_BORDER_COLOR 0x8154
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glColorTable
typedef void (APIENTRYP PFNGLUXCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
typedef void (APIENTRYP PFNGLUXCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void *table);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
typedef void (APIENTRYP PFNGLUXGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
typedef void (APIENTRYP PFNGLUXCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
typedef void (APIENTRYP PFNGLUXCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
typedef void (APIENTRYP PFNGLUXCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, void *image);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
typedef void (APIENTRYP PFNGLUXGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
typedef void (APIENTRYP PFNGLUXGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
typedef void (APIENTRYP PFNGLUXSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
typedef void (APIENTRYP PFNGLUXGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
typedef void (APIENTRYP PFNGLUXGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
typedef void (APIENTRYP PFNGLUXGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glHistogram
typedef void (APIENTRYP PFNGLUXHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glMinmax
typedef void (APIENTRYP PFNGLUXMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
typedef void (APIENTRYP PFNGLUXRESETHISTOGRAMPROC) (GLenum target);
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
typedef void (APIENTRYP PFNGLUXRESETMINMAXPROC) (GLenum target);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glColorTable
extern PFNGLUXCOLORTABLEPROC glColorTable;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameterfv
extern PFNGLUXCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glColorTableParameteriv
extern PFNGLUXCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyColorTable
extern PFNGLUXCOPYCOLORTABLEPROC glCopyColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTable
extern PFNGLUXGETCOLORTABLEPROC glGetColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameterfv
extern PFNGLUXGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetColorTableParameteriv
extern PFNGLUXGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
#endif
#ifndef __GLUX__GLFCT_glColorSubTable
extern PFNGLUXCOLORSUBTABLEPROC glColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glCopyColorSubTable
extern PFNGLUXCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter1D
extern PFNGLUXCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionFilter2D
extern PFNGLUXCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterf
extern PFNGLUXCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameterfv
extern PFNGLUXCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteri
extern PFNGLUXCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
#endif
#ifndef __GLUX__GLFCT_glConvolutionParameteriv
extern PFNGLUXCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter1D
extern PFNGLUXCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
#endif
#ifndef __GLUX__GLFCT_glCopyConvolutionFilter2D
extern PFNGLUXCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionFilter
extern PFNGLUXGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameterfv
extern PFNGLUXGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetConvolutionParameteriv
extern PFNGLUXGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSeparableFilter
extern PFNGLUXGETSEPARABLEFILTERPROC glGetSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glSeparableFilter2D
extern PFNGLUXSEPARABLEFILTER2DPROC glSeparableFilter2D;
#endif
#ifndef __GLUX__GLFCT_glGetHistogram
extern PFNGLUXGETHISTOGRAMPROC glGetHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameterfv
extern PFNGLUXGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetHistogramParameteriv
extern PFNGLUXGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmax
extern PFNGLUXGETMINMAXPROC glGetMinmax;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameterfv
extern PFNGLUXGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetMinmaxParameteriv
extern PFNGLUXGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
#endif
#ifndef __GLUX__GLFCT_glHistogram
extern PFNGLUXHISTOGRAMPROC glHistogram;
#endif
#ifndef __GLUX__GLFCT_glMinmax
extern PFNGLUXMINMAXPROC glMinmax;
#endif
#ifndef __GLUX__GLFCT_glResetHistogram
extern PFNGLUXRESETHISTOGRAMPROC glResetHistogram;
#endif
#ifndef __GLUX__GLFCT_glResetMinmax
extern PFNGLUXRESETMINMAXPROC glResetMinmax;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
