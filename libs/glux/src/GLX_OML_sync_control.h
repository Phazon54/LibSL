
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GLX_OML_sync_control__
#define __GLUX_GLX_OML_sync_control__

GLUX_NEW_PLUGIN(GLX_OML_sync_control)
// --------------------------------------------------------
#if !(defined WIN32 || defined(_WIN64) || defined __APPLE__ || defined EMSCRIPTEN)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#ifndef GLEXT_64_TYPES_DEFINED
#  ifndef GLEXT_64_TYPES_DEFINED
#    define GLEXT_64_TYPES_DEFINED 
#  endif
#endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glXGetSyncValuesOML
typedef Bool (APIENTRYP PFNXGLUXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc);
#endif
#ifndef __GLUX__GLFCT_glXGetMscRateOML
typedef Bool (APIENTRYP PFNXGLUXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator);
#endif
#ifndef __GLUX__GLFCT_glXSwapBuffersMscOML
typedef int64_t (APIENTRYP PFNXGLUXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);
#endif
#ifndef __GLUX__GLFCT_glXWaitForMscOML
typedef Bool (APIENTRYP PFNXGLUXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc);
#endif
#ifndef __GLUX__GLFCT_glXWaitForSbcOML
typedef Bool (APIENTRYP PFNXGLUXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glXGetSyncValuesOML
extern PFNXGLUXGETSYNCVALUESOMLPROC glXGetSyncValuesOML;
#endif
#ifndef __GLUX__GLFCT_glXGetMscRateOML
extern PFNXGLUXGETMSCRATEOMLPROC glXGetMscRateOML;
#endif
#ifndef __GLUX__GLFCT_glXSwapBuffersMscOML
extern PFNXGLUXSWAPBUFFERSMSCOMLPROC glXSwapBuffersMscOML;
#endif
#ifndef __GLUX__GLFCT_glXWaitForMscOML
extern PFNXGLUXWAITFORMSCOMLPROC glXWaitForMscOML;
#endif
#ifndef __GLUX__GLFCT_glXWaitForSbcOML
extern PFNXGLUXWAITFORSBCOMLPROC glXWaitForSbcOML;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
#endif
// --------------------------------------------------------
