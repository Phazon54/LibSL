
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_AMD_performance_monitor__
#define __GLUX_GL_AMD_performance_monitor__

GLUX_NEW_PLUGIN(GL_AMD_performance_monitor)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_COUNTER_TYPE_AMD
#    define GL_COUNTER_TYPE_AMD 0x8BC0
#  endif
#  ifndef GL_COUNTER_RANGE_AMD
#    define GL_COUNTER_RANGE_AMD 0x8BC1
#  endif
#  ifndef GL_UNSIGNED_INT64_AMD
#    define GL_UNSIGNED_INT64_AMD 0x8BC2
#  endif
#  ifndef GL_PERCENTAGE_AMD
#    define GL_PERCENTAGE_AMD 0x8BC3
#  endif
#  ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#    define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#  endif
#  ifndef GL_PERFMON_RESULT_SIZE_AMD
#    define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#  endif
#  ifndef GL_PERFMON_RESULT_AMD
#    define GL_PERFMON_RESULT_AMD 0x8BC6
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
typedef void (APIENTRYP PFNGLUXDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
typedef void (APIENTRYP PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXBEGINPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
typedef void (APIENTRYP PFNGLUXENDPERFMONITORAMDPROC) (GLuint monitor);
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRYP PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupsAMD
extern PFNGLUXGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCountersAMD
extern PFNGLUXGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorGroupStringAMD
extern PFNGLUXGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterStringAMD
extern PFNGLUXGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterInfoAMD
extern PFNGLUXGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
#endif
#ifndef __GLUX__GLFCT_glGenPerfMonitorsAMD
extern PFNGLUXGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glDeletePerfMonitorsAMD
extern PFNGLUXDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
#endif
#ifndef __GLUX__GLFCT_glSelectPerfMonitorCountersAMD
extern PFNGLUXSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
#endif
#ifndef __GLUX__GLFCT_glBeginPerfMonitorAMD
extern PFNGLUXBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glEndPerfMonitorAMD
extern PFNGLUXENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
#endif
#ifndef __GLUX__GLFCT_glGetPerfMonitorCounterDataAMD
extern PFNGLUXGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
