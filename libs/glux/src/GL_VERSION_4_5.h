
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_4_5__
#define __GLUX_GL_VERSION_4_5__

GLUX_NEW_PLUGIN(GL_VERSION_4_5)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_CONTEXT_LOST
#    define GL_CONTEXT_LOST 0x0507
#  endif
#  ifndef GL_NEGATIVE_ONE_TO_ONE
#    define GL_NEGATIVE_ONE_TO_ONE 0x935E
#  endif
#  ifndef GL_ZERO_TO_ONE
#    define GL_ZERO_TO_ONE 0x935F
#  endif
#  ifndef GL_CLIP_ORIGIN
#    define GL_CLIP_ORIGIN 0x935C
#  endif
#  ifndef GL_CLIP_DEPTH_MODE
#    define GL_CLIP_DEPTH_MODE 0x935D
#  endif
#  ifndef GL_QUERY_WAIT_INVERTED
#    define GL_QUERY_WAIT_INVERTED 0x8E17
#  endif
#  ifndef GL_QUERY_NO_WAIT_INVERTED
#    define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#  endif
#  ifndef GL_QUERY_BY_REGION_WAIT_INVERTED
#    define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#  endif
#  ifndef GL_QUERY_BY_REGION_NO_WAIT_INVERTED
#    define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#  endif
#  ifndef GL_MAX_CULL_DISTANCES
#    define GL_MAX_CULL_DISTANCES 0x82F9
#  endif
#  ifndef GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
#    define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#  endif
#  ifndef GL_TEXTURE_TARGET
#    define GL_TEXTURE_TARGET 0x1006
#  endif
#  ifndef GL_QUERY_TARGET
#    define GL_QUERY_TARGET 0x82EA
#  endif
#  ifndef GL_GUILTY_CONTEXT_RESET
#    define GL_GUILTY_CONTEXT_RESET 0x8253
#  endif
#  ifndef GL_INNOCENT_CONTEXT_RESET
#    define GL_INNOCENT_CONTEXT_RESET 0x8254
#  endif
#  ifndef GL_UNKNOWN_CONTEXT_RESET
#    define GL_UNKNOWN_CONTEXT_RESET 0x8255
#  endif
#  ifndef GL_RESET_NOTIFICATION_STRATEGY
#    define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#  endif
#  ifndef GL_LOSE_CONTEXT_ON_RESET
#    define GL_LOSE_CONTEXT_ON_RESET 0x8252
#  endif
#  ifndef GL_NO_RESET_NOTIFICATION
#    define GL_NO_RESET_NOTIFICATION 0x8261
#  endif
#  ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT
#    define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#  endif
#  ifndef GL_CONTEXT_RELEASE_BEHAVIOR
#    define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#  endif
#  ifndef GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
#    define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glClipControl
typedef void (APIENTRYP PFNGLUXCLIPCONTROLPROC) (GLenum origin, GLenum depth);
#endif
#ifndef __GLUX__GLFCT_glCreateTransformFeedbacks
typedef void (APIENTRYP PFNGLUXCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackBufferBase
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackBufferRange
typedef void (APIENTRYP PFNGLUXTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackiv
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbacki_v
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbacki64_v
typedef void (APIENTRYP PFNGLUXGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
#endif
#ifndef __GLUX__GLFCT_glCreateBuffers
typedef void (APIENTRYP PFNGLUXCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);
#endif
#ifndef __GLUX__GLFCT_glNamedBufferStorage
typedef void (APIENTRYP PFNGLUXNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
#endif
#ifndef __GLUX__GLFCT_glNamedBufferData
typedef void (APIENTRYP PFNGLUXNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
#endif
#ifndef __GLUX__GLFCT_glNamedBufferSubData
typedef void (APIENTRYP PFNGLUXNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
#endif
#ifndef __GLUX__GLFCT_glCopyNamedBufferSubData
typedef void (APIENTRYP PFNGLUXCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glClearNamedBufferData
typedef void (APIENTRYP PFNGLUXCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
#endif
#ifndef __GLUX__GLFCT_glClearNamedBufferSubData
typedef void (APIENTRYP PFNGLUXCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
#endif
#ifndef __GLUX__GLFCT_glMapNamedBuffer
typedef void *(APIENTRYP PFNGLUXMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);
#endif
#ifndef __GLUX__GLFCT_glMapNamedBufferRange
typedef void *(APIENTRYP PFNGLUXMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
#endif
#ifndef __GLUX__GLFCT_glUnmapNamedBuffer
typedef GLboolean (APIENTRYP PFNGLUXUNMAPNAMEDBUFFERPROC) (GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glFlushMappedNamedBufferRange
typedef void (APIENTRYP PFNGLUXFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameteriv
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameteri64v
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferPointerv
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferSubData
typedef void (APIENTRYP PFNGLUXGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
#endif
#ifndef __GLUX__GLFCT_glCreateFramebuffers
typedef void (APIENTRYP PFNGLUXCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferRenderbuffer
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferParameteri
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferTexture
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferTextureLayer
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferDrawBuffer
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferDrawBuffers
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferReadBuffer
typedef void (APIENTRYP PFNGLUXNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);
#endif
#ifndef __GLUX__GLFCT_glInvalidateNamedFramebufferData
typedef void (APIENTRYP PFNGLUXINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
#endif
#ifndef __GLUX__GLFCT_glInvalidateNamedFramebufferSubData
typedef void (APIENTRYP PFNGLUXINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferiv
typedef void (APIENTRYP PFNGLUXCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferuiv
typedef void (APIENTRYP PFNGLUXCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferfv
typedef void (APIENTRYP PFNGLUXCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferfi
typedef void (APIENTRYP PFNGLUXCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
#endif
#ifndef __GLUX__GLFCT_glBlitNamedFramebuffer
typedef void (APIENTRYP PFNGLUXBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif
#ifndef __GLUX__GLFCT_glCheckNamedFramebufferStatus
typedef GLenum (APIENTRYP PFNGLUXCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);
#endif
#ifndef __GLUX__GLFCT_glGetNamedFramebufferParameteriv
typedef void (APIENTRYP PFNGLUXGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGetNamedFramebufferAttachmentParameteriv
typedef void (APIENTRYP PFNGLUXGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCreateRenderbuffers
typedef void (APIENTRYP PFNGLUXCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);
#endif
#ifndef __GLUX__GLFCT_glNamedRenderbufferStorage
typedef void (APIENTRYP PFNGLUXNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glNamedRenderbufferStorageMultisample
typedef void (APIENTRYP PFNGLUXNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glGetNamedRenderbufferParameteriv
typedef void (APIENTRYP PFNGLUXGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCreateTextures
typedef void (APIENTRYP PFNGLUXCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);
#endif
#ifndef __GLUX__GLFCT_glTextureBuffer
typedef void (APIENTRYP PFNGLUXTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glTextureBufferRange
typedef void (APIENTRYP PFNGLUXTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
#endif
#ifndef __GLUX__GLFCT_glTextureStorage1D
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glTextureStorage2D
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glTextureStorage3D
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
#endif
#ifndef __GLUX__GLFCT_glTextureStorage2DMultisample
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
#endif
#ifndef __GLUX__GLFCT_glTextureStorage3DMultisample
typedef void (APIENTRYP PFNGLUXTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage1D
typedef void (APIENTRYP PFNGLUXTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage2D
typedef void (APIENTRYP PFNGLUXTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage3D
typedef void (APIENTRYP PFNGLUXTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage1D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage2D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage3D
typedef void (APIENTRYP PFNGLUXCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage1D
typedef void (APIENTRYP PFNGLUXCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage2D
typedef void (APIENTRYP PFNGLUXCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage3D
typedef void (APIENTRYP PFNGLUXCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#ifndef __GLUX__GLFCT_glTextureParameterf
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glTextureParameterfv
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);
#endif
#ifndef __GLUX__GLFCT_glTextureParameteri
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glTextureParameterIiv
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTextureParameterIuiv
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glTextureParameteriv
typedef void (APIENTRYP PFNGLUXTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGenerateTextureMipmap
typedef void (APIENTRYP PFNGLUXGENERATETEXTUREMIPMAPPROC) (GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glBindTextureUnit
typedef void (APIENTRYP PFNGLUXBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);
#endif
#ifndef __GLUX__GLFCT_glGetTextureImage
typedef void (APIENTRYP PFNGLUXGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTextureImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetTextureLevelParameterfv
typedef void (APIENTRYP PFNGLUXGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetTextureLevelParameteriv
typedef void (APIENTRYP PFNGLUXGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterfv
typedef void (APIENTRYP PFNGLUXGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterIiv
typedef void (APIENTRYP PFNGLUXGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterIuiv
typedef void (APIENTRYP PFNGLUXGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameteriv
typedef void (APIENTRYP PFNGLUXGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glCreateVertexArrays
typedef void (APIENTRYP PFNGLUXCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);
#endif
#ifndef __GLUX__GLFCT_glDisableVertexArrayAttrib
typedef void (APIENTRYP PFNGLUXDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
#endif
#ifndef __GLUX__GLFCT_glEnableVertexArrayAttrib
typedef void (APIENTRYP PFNGLUXENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayElementBuffer
typedef void (APIENTRYP PFNGLUXVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBuffer
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBuffers
typedef void (APIENTRYP PFNGLUXVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribBinding
typedef void (APIENTRYP PFNGLUXVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribFormat
typedef void (APIENTRYP PFNGLUXVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribIFormat
typedef void (APIENTRYP PFNGLUXVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribLFormat
typedef void (APIENTRYP PFNGLUXVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindingDivisor
typedef void (APIENTRYP PFNGLUXVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayiv
typedef void (APIENTRYP PFNGLUXGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayIndexediv
typedef void (APIENTRYP PFNGLUXGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayIndexed64iv
typedef void (APIENTRYP PFNGLUXGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
#endif
#ifndef __GLUX__GLFCT_glCreateSamplers
typedef void (APIENTRYP PFNGLUXCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);
#endif
#ifndef __GLUX__GLFCT_glCreateProgramPipelines
typedef void (APIENTRYP PFNGLUXCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);
#endif
#ifndef __GLUX__GLFCT_glCreateQueries
typedef void (APIENTRYP PFNGLUXCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjecti64v
typedef void (APIENTRYP PFNGLUXGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectiv
typedef void (APIENTRYP PFNGLUXGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectui64v
typedef void (APIENTRYP PFNGLUXGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectuiv
typedef void (APIENTRYP PFNGLUXGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
#endif
#ifndef __GLUX__GLFCT_glMemoryBarrierByRegion
typedef void (APIENTRYP PFNGLUXMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);
#endif
#ifndef __GLUX__GLFCT_glGetTextureSubImage
typedef void (APIENTRYP PFNGLUXGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTextureSubImage
typedef void (APIENTRYP PFNGLUXGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatus
typedef GLenum (APIENTRYP PFNGLUXGETGRAPHICSRESETSTATUSPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImage
typedef void (APIENTRYP PFNGLUXGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetnTexImage
typedef void (APIENTRYP PFNGLUXGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdv
typedef void (APIENTRYP PFNGLUXGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfv
typedef void (APIENTRYP PFNGLUXGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformiv
typedef void (APIENTRYP PFNGLUXGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuiv
typedef void (APIENTRYP PFNGLUXGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glReadnPixels
typedef void (APIENTRYP PFNGLUXREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
#endif
#ifndef __GLUX__GLFCT_glGetnMapdv
typedef void (APIENTRYP PFNGLUXGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapfv
typedef void (APIENTRYP PFNGLUXGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
#endif
#ifndef __GLUX__GLFCT_glGetnMapiv
typedef void (APIENTRYP PFNGLUXGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfv
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuiv
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusv
typedef void (APIENTRYP PFNGLUXGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values);
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStipple
typedef void (APIENTRYP PFNGLUXGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);
#endif
#ifndef __GLUX__GLFCT_glGetnColorTable
typedef void (APIENTRYP PFNGLUXGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilter
typedef void (APIENTRYP PFNGLUXGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilter
typedef void (APIENTRYP PFNGLUXGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
#endif
#ifndef __GLUX__GLFCT_glGetnHistogram
typedef void (APIENTRYP PFNGLUXGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
#endif
#ifndef __GLUX__GLFCT_glGetnMinmax
typedef void (APIENTRYP PFNGLUXGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
#endif
#ifndef __GLUX__GLFCT_glTextureBarrier
typedef void (APIENTRYP PFNGLUXTEXTUREBARRIERPROC) (void);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glClipControl
extern PFNGLUXCLIPCONTROLPROC glClipControl;
#endif
#ifndef __GLUX__GLFCT_glCreateTransformFeedbacks
extern PFNGLUXCREATETRANSFORMFEEDBACKSPROC glCreateTransformFeedbacks;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackBufferBase
extern PFNGLUXTRANSFORMFEEDBACKBUFFERBASEPROC glTransformFeedbackBufferBase;
#endif
#ifndef __GLUX__GLFCT_glTransformFeedbackBufferRange
extern PFNGLUXTRANSFORMFEEDBACKBUFFERRANGEPROC glTransformFeedbackBufferRange;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbackiv
extern PFNGLUXGETTRANSFORMFEEDBACKIVPROC glGetTransformFeedbackiv;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbacki_v
extern PFNGLUXGETTRANSFORMFEEDBACKI_VPROC glGetTransformFeedbacki_v;
#endif
#ifndef __GLUX__GLFCT_glGetTransformFeedbacki64_v
extern PFNGLUXGETTRANSFORMFEEDBACKI64_VPROC glGetTransformFeedbacki64_v;
#endif
#ifndef __GLUX__GLFCT_glCreateBuffers
extern PFNGLUXCREATEBUFFERSPROC glCreateBuffers;
#endif
#ifndef __GLUX__GLFCT_glNamedBufferStorage
extern PFNGLUXNAMEDBUFFERSTORAGEPROC glNamedBufferStorage;
#endif
#ifndef __GLUX__GLFCT_glNamedBufferData
extern PFNGLUXNAMEDBUFFERDATAPROC glNamedBufferData;
#endif
#ifndef __GLUX__GLFCT_glNamedBufferSubData
extern PFNGLUXNAMEDBUFFERSUBDATAPROC glNamedBufferSubData;
#endif
#ifndef __GLUX__GLFCT_glCopyNamedBufferSubData
extern PFNGLUXCOPYNAMEDBUFFERSUBDATAPROC glCopyNamedBufferSubData;
#endif
#ifndef __GLUX__GLFCT_glClearNamedBufferData
extern PFNGLUXCLEARNAMEDBUFFERDATAPROC glClearNamedBufferData;
#endif
#ifndef __GLUX__GLFCT_glClearNamedBufferSubData
extern PFNGLUXCLEARNAMEDBUFFERSUBDATAPROC glClearNamedBufferSubData;
#endif
#ifndef __GLUX__GLFCT_glMapNamedBuffer
extern PFNGLUXMAPNAMEDBUFFERPROC glMapNamedBuffer;
#endif
#ifndef __GLUX__GLFCT_glMapNamedBufferRange
extern PFNGLUXMAPNAMEDBUFFERRANGEPROC glMapNamedBufferRange;
#endif
#ifndef __GLUX__GLFCT_glUnmapNamedBuffer
extern PFNGLUXUNMAPNAMEDBUFFERPROC glUnmapNamedBuffer;
#endif
#ifndef __GLUX__GLFCT_glFlushMappedNamedBufferRange
extern PFNGLUXFLUSHMAPPEDNAMEDBUFFERRANGEPROC glFlushMappedNamedBufferRange;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameteriv
extern PFNGLUXGETNAMEDBUFFERPARAMETERIVPROC glGetNamedBufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferParameteri64v
extern PFNGLUXGETNAMEDBUFFERPARAMETERI64VPROC glGetNamedBufferParameteri64v;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferPointerv
extern PFNGLUXGETNAMEDBUFFERPOINTERVPROC glGetNamedBufferPointerv;
#endif
#ifndef __GLUX__GLFCT_glGetNamedBufferSubData
extern PFNGLUXGETNAMEDBUFFERSUBDATAPROC glGetNamedBufferSubData;
#endif
#ifndef __GLUX__GLFCT_glCreateFramebuffers
extern PFNGLUXCREATEFRAMEBUFFERSPROC glCreateFramebuffers;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferRenderbuffer
extern PFNGLUXNAMEDFRAMEBUFFERRENDERBUFFERPROC glNamedFramebufferRenderbuffer;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferParameteri
extern PFNGLUXNAMEDFRAMEBUFFERPARAMETERIPROC glNamedFramebufferParameteri;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferTexture
extern PFNGLUXNAMEDFRAMEBUFFERTEXTUREPROC glNamedFramebufferTexture;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferTextureLayer
extern PFNGLUXNAMEDFRAMEBUFFERTEXTURELAYERPROC glNamedFramebufferTextureLayer;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferDrawBuffer
extern PFNGLUXNAMEDFRAMEBUFFERDRAWBUFFERPROC glNamedFramebufferDrawBuffer;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferDrawBuffers
extern PFNGLUXNAMEDFRAMEBUFFERDRAWBUFFERSPROC glNamedFramebufferDrawBuffers;
#endif
#ifndef __GLUX__GLFCT_glNamedFramebufferReadBuffer
extern PFNGLUXNAMEDFRAMEBUFFERREADBUFFERPROC glNamedFramebufferReadBuffer;
#endif
#ifndef __GLUX__GLFCT_glInvalidateNamedFramebufferData
extern PFNGLUXINVALIDATENAMEDFRAMEBUFFERDATAPROC glInvalidateNamedFramebufferData;
#endif
#ifndef __GLUX__GLFCT_glInvalidateNamedFramebufferSubData
extern PFNGLUXINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glInvalidateNamedFramebufferSubData;
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferiv
extern PFNGLUXCLEARNAMEDFRAMEBUFFERIVPROC glClearNamedFramebufferiv;
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferuiv
extern PFNGLUXCLEARNAMEDFRAMEBUFFERUIVPROC glClearNamedFramebufferuiv;
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferfv
extern PFNGLUXCLEARNAMEDFRAMEBUFFERFVPROC glClearNamedFramebufferfv;
#endif
#ifndef __GLUX__GLFCT_glClearNamedFramebufferfi
extern PFNGLUXCLEARNAMEDFRAMEBUFFERFIPROC glClearNamedFramebufferfi;
#endif
#ifndef __GLUX__GLFCT_glBlitNamedFramebuffer
extern PFNGLUXBLITNAMEDFRAMEBUFFERPROC glBlitNamedFramebuffer;
#endif
#ifndef __GLUX__GLFCT_glCheckNamedFramebufferStatus
extern PFNGLUXCHECKNAMEDFRAMEBUFFERSTATUSPROC glCheckNamedFramebufferStatus;
#endif
#ifndef __GLUX__GLFCT_glGetNamedFramebufferParameteriv
extern PFNGLUXGETNAMEDFRAMEBUFFERPARAMETERIVPROC glGetNamedFramebufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetNamedFramebufferAttachmentParameteriv
extern PFNGLUXGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetNamedFramebufferAttachmentParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCreateRenderbuffers
extern PFNGLUXCREATERENDERBUFFERSPROC glCreateRenderbuffers;
#endif
#ifndef __GLUX__GLFCT_glNamedRenderbufferStorage
extern PFNGLUXNAMEDRENDERBUFFERSTORAGEPROC glNamedRenderbufferStorage;
#endif
#ifndef __GLUX__GLFCT_glNamedRenderbufferStorageMultisample
extern PFNGLUXNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glNamedRenderbufferStorageMultisample;
#endif
#ifndef __GLUX__GLFCT_glGetNamedRenderbufferParameteriv
extern PFNGLUXGETNAMEDRENDERBUFFERPARAMETERIVPROC glGetNamedRenderbufferParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCreateTextures
extern PFNGLUXCREATETEXTURESPROC glCreateTextures;
#endif
#ifndef __GLUX__GLFCT_glTextureBuffer
extern PFNGLUXTEXTUREBUFFERPROC glTextureBuffer;
#endif
#ifndef __GLUX__GLFCT_glTextureBufferRange
extern PFNGLUXTEXTUREBUFFERRANGEPROC glTextureBufferRange;
#endif
#ifndef __GLUX__GLFCT_glTextureStorage1D
extern PFNGLUXTEXTURESTORAGE1DPROC glTextureStorage1D;
#endif
#ifndef __GLUX__GLFCT_glTextureStorage2D
extern PFNGLUXTEXTURESTORAGE2DPROC glTextureStorage2D;
#endif
#ifndef __GLUX__GLFCT_glTextureStorage3D
extern PFNGLUXTEXTURESTORAGE3DPROC glTextureStorage3D;
#endif
#ifndef __GLUX__GLFCT_glTextureStorage2DMultisample
extern PFNGLUXTEXTURESTORAGE2DMULTISAMPLEPROC glTextureStorage2DMultisample;
#endif
#ifndef __GLUX__GLFCT_glTextureStorage3DMultisample
extern PFNGLUXTEXTURESTORAGE3DMULTISAMPLEPROC glTextureStorage3DMultisample;
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage1D
extern PFNGLUXTEXTURESUBIMAGE1DPROC glTextureSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage2D
extern PFNGLUXTEXTURESUBIMAGE2DPROC glTextureSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glTextureSubImage3D
extern PFNGLUXTEXTURESUBIMAGE3DPROC glTextureSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage1D
extern PFNGLUXCOMPRESSEDTEXTURESUBIMAGE1DPROC glCompressedTextureSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage2D
extern PFNGLUXCOMPRESSEDTEXTURESUBIMAGE2DPROC glCompressedTextureSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCompressedTextureSubImage3D
extern PFNGLUXCOMPRESSEDTEXTURESUBIMAGE3DPROC glCompressedTextureSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage1D
extern PFNGLUXCOPYTEXTURESUBIMAGE1DPROC glCopyTextureSubImage1D;
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage2D
extern PFNGLUXCOPYTEXTURESUBIMAGE2DPROC glCopyTextureSubImage2D;
#endif
#ifndef __GLUX__GLFCT_glCopyTextureSubImage3D
extern PFNGLUXCOPYTEXTURESUBIMAGE3DPROC glCopyTextureSubImage3D;
#endif
#ifndef __GLUX__GLFCT_glTextureParameterf
extern PFNGLUXTEXTUREPARAMETERFPROC glTextureParameterf;
#endif
#ifndef __GLUX__GLFCT_glTextureParameterfv
extern PFNGLUXTEXTUREPARAMETERFVPROC glTextureParameterfv;
#endif
#ifndef __GLUX__GLFCT_glTextureParameteri
extern PFNGLUXTEXTUREPARAMETERIPROC glTextureParameteri;
#endif
#ifndef __GLUX__GLFCT_glTextureParameterIiv
extern PFNGLUXTEXTUREPARAMETERIIVPROC glTextureParameterIiv;
#endif
#ifndef __GLUX__GLFCT_glTextureParameterIuiv
extern PFNGLUXTEXTUREPARAMETERIUIVPROC glTextureParameterIuiv;
#endif
#ifndef __GLUX__GLFCT_glTextureParameteriv
extern PFNGLUXTEXTUREPARAMETERIVPROC glTextureParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGenerateTextureMipmap
extern PFNGLUXGENERATETEXTUREMIPMAPPROC glGenerateTextureMipmap;
#endif
#ifndef __GLUX__GLFCT_glBindTextureUnit
extern PFNGLUXBINDTEXTUREUNITPROC glBindTextureUnit;
#endif
#ifndef __GLUX__GLFCT_glGetTextureImage
extern PFNGLUXGETTEXTUREIMAGEPROC glGetTextureImage;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTextureImage
extern PFNGLUXGETCOMPRESSEDTEXTUREIMAGEPROC glGetCompressedTextureImage;
#endif
#ifndef __GLUX__GLFCT_glGetTextureLevelParameterfv
extern PFNGLUXGETTEXTURELEVELPARAMETERFVPROC glGetTextureLevelParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetTextureLevelParameteriv
extern PFNGLUXGETTEXTURELEVELPARAMETERIVPROC glGetTextureLevelParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterfv
extern PFNGLUXGETTEXTUREPARAMETERFVPROC glGetTextureParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterIiv
extern PFNGLUXGETTEXTUREPARAMETERIIVPROC glGetTextureParameterIiv;
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameterIuiv
extern PFNGLUXGETTEXTUREPARAMETERIUIVPROC glGetTextureParameterIuiv;
#endif
#ifndef __GLUX__GLFCT_glGetTextureParameteriv
extern PFNGLUXGETTEXTUREPARAMETERIVPROC glGetTextureParameteriv;
#endif
#ifndef __GLUX__GLFCT_glCreateVertexArrays
extern PFNGLUXCREATEVERTEXARRAYSPROC glCreateVertexArrays;
#endif
#ifndef __GLUX__GLFCT_glDisableVertexArrayAttrib
extern PFNGLUXDISABLEVERTEXARRAYATTRIBPROC glDisableVertexArrayAttrib;
#endif
#ifndef __GLUX__GLFCT_glEnableVertexArrayAttrib
extern PFNGLUXENABLEVERTEXARRAYATTRIBPROC glEnableVertexArrayAttrib;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayElementBuffer
extern PFNGLUXVERTEXARRAYELEMENTBUFFERPROC glVertexArrayElementBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBuffer
extern PFNGLUXVERTEXARRAYVERTEXBUFFERPROC glVertexArrayVertexBuffer;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayVertexBuffers
extern PFNGLUXVERTEXARRAYVERTEXBUFFERSPROC glVertexArrayVertexBuffers;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribBinding
extern PFNGLUXVERTEXARRAYATTRIBBINDINGPROC glVertexArrayAttribBinding;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribFormat
extern PFNGLUXVERTEXARRAYATTRIBFORMATPROC glVertexArrayAttribFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribIFormat
extern PFNGLUXVERTEXARRAYATTRIBIFORMATPROC glVertexArrayAttribIFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayAttribLFormat
extern PFNGLUXVERTEXARRAYATTRIBLFORMATPROC glVertexArrayAttribLFormat;
#endif
#ifndef __GLUX__GLFCT_glVertexArrayBindingDivisor
extern PFNGLUXVERTEXARRAYBINDINGDIVISORPROC glVertexArrayBindingDivisor;
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayiv
extern PFNGLUXGETVERTEXARRAYIVPROC glGetVertexArrayiv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayIndexediv
extern PFNGLUXGETVERTEXARRAYINDEXEDIVPROC glGetVertexArrayIndexediv;
#endif
#ifndef __GLUX__GLFCT_glGetVertexArrayIndexed64iv
extern PFNGLUXGETVERTEXARRAYINDEXED64IVPROC glGetVertexArrayIndexed64iv;
#endif
#ifndef __GLUX__GLFCT_glCreateSamplers
extern PFNGLUXCREATESAMPLERSPROC glCreateSamplers;
#endif
#ifndef __GLUX__GLFCT_glCreateProgramPipelines
extern PFNGLUXCREATEPROGRAMPIPELINESPROC glCreateProgramPipelines;
#endif
#ifndef __GLUX__GLFCT_glCreateQueries
extern PFNGLUXCREATEQUERIESPROC glCreateQueries;
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjecti64v
extern PFNGLUXGETQUERYBUFFEROBJECTI64VPROC glGetQueryBufferObjecti64v;
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectiv
extern PFNGLUXGETQUERYBUFFEROBJECTIVPROC glGetQueryBufferObjectiv;
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectui64v
extern PFNGLUXGETQUERYBUFFEROBJECTUI64VPROC glGetQueryBufferObjectui64v;
#endif
#ifndef __GLUX__GLFCT_glGetQueryBufferObjectuiv
extern PFNGLUXGETQUERYBUFFEROBJECTUIVPROC glGetQueryBufferObjectuiv;
#endif
#ifndef __GLUX__GLFCT_glMemoryBarrierByRegion
extern PFNGLUXMEMORYBARRIERBYREGIONPROC glMemoryBarrierByRegion;
#endif
#ifndef __GLUX__GLFCT_glGetTextureSubImage
extern PFNGLUXGETTEXTURESUBIMAGEPROC glGetTextureSubImage;
#endif
#ifndef __GLUX__GLFCT_glGetCompressedTextureSubImage
extern PFNGLUXGETCOMPRESSEDTEXTURESUBIMAGEPROC glGetCompressedTextureSubImage;
#endif
#ifndef __GLUX__GLFCT_glGetGraphicsResetStatus
extern PFNGLUXGETGRAPHICSRESETSTATUSPROC glGetGraphicsResetStatus;
#endif
#ifndef __GLUX__GLFCT_glGetnCompressedTexImage
extern PFNGLUXGETNCOMPRESSEDTEXIMAGEPROC glGetnCompressedTexImage;
#endif
#ifndef __GLUX__GLFCT_glGetnTexImage
extern PFNGLUXGETNTEXIMAGEPROC glGetnTexImage;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformdv
extern PFNGLUXGETNUNIFORMDVPROC glGetnUniformdv;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformfv
extern PFNGLUXGETNUNIFORMFVPROC glGetnUniformfv;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformiv
extern PFNGLUXGETNUNIFORMIVPROC glGetnUniformiv;
#endif
#ifndef __GLUX__GLFCT_glGetnUniformuiv
extern PFNGLUXGETNUNIFORMUIVPROC glGetnUniformuiv;
#endif
#ifndef __GLUX__GLFCT_glReadnPixels
extern PFNGLUXREADNPIXELSPROC glReadnPixels;
#endif
#ifndef __GLUX__GLFCT_glGetnMapdv
extern PFNGLUXGETNMAPDVPROC glGetnMapdv;
#endif
#ifndef __GLUX__GLFCT_glGetnMapfv
extern PFNGLUXGETNMAPFVPROC glGetnMapfv;
#endif
#ifndef __GLUX__GLFCT_glGetnMapiv
extern PFNGLUXGETNMAPIVPROC glGetnMapiv;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapfv
extern PFNGLUXGETNPIXELMAPFVPROC glGetnPixelMapfv;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapuiv
extern PFNGLUXGETNPIXELMAPUIVPROC glGetnPixelMapuiv;
#endif
#ifndef __GLUX__GLFCT_glGetnPixelMapusv
extern PFNGLUXGETNPIXELMAPUSVPROC glGetnPixelMapusv;
#endif
#ifndef __GLUX__GLFCT_glGetnPolygonStipple
extern PFNGLUXGETNPOLYGONSTIPPLEPROC glGetnPolygonStipple;
#endif
#ifndef __GLUX__GLFCT_glGetnColorTable
extern PFNGLUXGETNCOLORTABLEPROC glGetnColorTable;
#endif
#ifndef __GLUX__GLFCT_glGetnConvolutionFilter
extern PFNGLUXGETNCONVOLUTIONFILTERPROC glGetnConvolutionFilter;
#endif
#ifndef __GLUX__GLFCT_glGetnSeparableFilter
extern PFNGLUXGETNSEPARABLEFILTERPROC glGetnSeparableFilter;
#endif
#ifndef __GLUX__GLFCT_glGetnHistogram
extern PFNGLUXGETNHISTOGRAMPROC glGetnHistogram;
#endif
#ifndef __GLUX__GLFCT_glGetnMinmax
extern PFNGLUXGETNMINMAXPROC glGetnMinmax;
#endif
#ifndef __GLUX__GLFCT_glTextureBarrier
extern PFNGLUXTEXTUREBARRIERPROC glTextureBarrier;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
