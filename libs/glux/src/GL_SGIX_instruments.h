
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_SGIX_instruments__
#define __GLUX_GL_SGIX_instruments__

GLUX_NEW_PLUGIN(GL_SGIX_instruments)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_INSTRUMENT_BUFFER_POINTER_SGIX
#    define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#  endif
#  ifndef GL_INSTRUMENT_MEASUREMENTS_SGIX
#    define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glGetInstrumentsSGIX
typedef GLint (APIENTRYP PFNGLUXGETINSTRUMENTSSGIXPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glInstrumentsBufferSGIX
typedef void (APIENTRYP PFNGLUXINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);
#endif
#ifndef __GLUX__GLFCT_glPollInstrumentsSGIX
typedef GLint (APIENTRYP PFNGLUXPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);
#endif
#ifndef __GLUX__GLFCT_glReadInstrumentsSGIX
typedef void (APIENTRYP PFNGLUXREADINSTRUMENTSSGIXPROC) (GLint marker);
#endif
#ifndef __GLUX__GLFCT_glStartInstrumentsSGIX
typedef void (APIENTRYP PFNGLUXSTARTINSTRUMENTSSGIXPROC) (void);
#endif
#ifndef __GLUX__GLFCT_glStopInstrumentsSGIX
typedef void (APIENTRYP PFNGLUXSTOPINSTRUMENTSSGIXPROC) (GLint marker);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glGetInstrumentsSGIX
extern PFNGLUXGETINSTRUMENTSSGIXPROC glGetInstrumentsSGIX;
#endif
#ifndef __GLUX__GLFCT_glInstrumentsBufferSGIX
extern PFNGLUXINSTRUMENTSBUFFERSGIXPROC glInstrumentsBufferSGIX;
#endif
#ifndef __GLUX__GLFCT_glPollInstrumentsSGIX
extern PFNGLUXPOLLINSTRUMENTSSGIXPROC glPollInstrumentsSGIX;
#endif
#ifndef __GLUX__GLFCT_glReadInstrumentsSGIX
extern PFNGLUXREADINSTRUMENTSSGIXPROC glReadInstrumentsSGIX;
#endif
#ifndef __GLUX__GLFCT_glStartInstrumentsSGIX
extern PFNGLUXSTARTINSTRUMENTSSGIXPROC glStartInstrumentsSGIX;
#endif
#ifndef __GLUX__GLFCT_glStopInstrumentsSGIX
extern PFNGLUXSTOPINSTRUMENTSSGIXPROC glStopInstrumentsSGIX;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
