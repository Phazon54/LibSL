
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_VERSION_3_3__
#define __GLUX_GL_VERSION_3_3__

GLUX_NEW_PLUGIN(GL_VERSION_3_3)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
#    define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#  endif
#  ifndef GL_SRC1_COLOR
#    define GL_SRC1_COLOR 0x88F9
#  endif
#  ifndef GL_ONE_MINUS_SRC1_COLOR
#    define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#  endif
#  ifndef GL_ONE_MINUS_SRC1_ALPHA
#    define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#  endif
#  ifndef GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
#    define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#  endif
#  ifndef GL_ANY_SAMPLES_PASSED
#    define GL_ANY_SAMPLES_PASSED 0x8C2F
#  endif
#  ifndef GL_SAMPLER_BINDING
#    define GL_SAMPLER_BINDING 0x8919
#  endif
#  ifndef GL_RGB10_A2UI
#    define GL_RGB10_A2UI 0x906F
#  endif
#  ifndef GL_TEXTURE_SWIZZLE_R
#    define GL_TEXTURE_SWIZZLE_R 0x8E42
#  endif
#  ifndef GL_TEXTURE_SWIZZLE_G
#    define GL_TEXTURE_SWIZZLE_G 0x8E43
#  endif
#  ifndef GL_TEXTURE_SWIZZLE_B
#    define GL_TEXTURE_SWIZZLE_B 0x8E44
#  endif
#  ifndef GL_TEXTURE_SWIZZLE_A
#    define GL_TEXTURE_SWIZZLE_A 0x8E45
#  endif
#  ifndef GL_TEXTURE_SWIZZLE_RGBA
#    define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#  endif
#  ifndef GL_TIME_ELAPSED
#    define GL_TIME_ELAPSED 0x88BF
#  endif
#  ifndef GL_TIMESTAMP
#    define GL_TIMESTAMP 0x8E28
#  endif
#  ifndef GL_INT_2_10_10_10_REV
#    define GL_INT_2_10_10_10_REV 0x8D9F
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glBindFragDataLocationIndexed
typedef void (APIENTRYP PFNGLUXBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetFragDataIndex
typedef GLint (APIENTRYP PFNGLUXGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGenSamplers
typedef void (APIENTRYP PFNGLUXGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);
#endif
#ifndef __GLUX__GLFCT_glDeleteSamplers
typedef void (APIENTRYP PFNGLUXDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);
#endif
#ifndef __GLUX__GLFCT_glIsSampler
typedef GLboolean (APIENTRYP PFNGLUXISSAMPLERPROC) (GLuint sampler);
#endif
#ifndef __GLUX__GLFCT_glBindSampler
typedef void (APIENTRYP PFNGLUXBINDSAMPLERPROC) (GLuint unit, GLuint sampler);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameteri
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameteriv
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterf
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterfv
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterIiv
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterIuiv
typedef void (APIENTRYP PFNGLUXSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameteriv
typedef void (APIENTRYP PFNGLUXGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterIiv
typedef void (APIENTRYP PFNGLUXGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterfv
typedef void (APIENTRYP PFNGLUXGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterIuiv
typedef void (APIENTRYP PFNGLUXGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glQueryCounter
typedef void (APIENTRYP PFNGLUXQUERYCOUNTERPROC) (GLuint id, GLenum target);
#endif
#ifndef __GLUX__GLFCT_glGetQueryObjecti64v
typedef void (APIENTRYP PFNGLUXGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);
#endif
#ifndef __GLUX__GLFCT_glGetQueryObjectui64v
typedef void (APIENTRYP PFNGLUXGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribDivisor
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2ui
typedef void (APIENTRYP PFNGLUXVERTEXP2UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
typedef void (APIENTRYP PFNGLUXVERTEXP2UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
typedef void (APIENTRYP PFNGLUXVERTEXP3UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
typedef void (APIENTRYP PFNGLUXVERTEXP3UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
typedef void (APIENTRYP PFNGLUXVERTEXP4UIPROC) (GLenum type, GLuint value);
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
typedef void (APIENTRYP PFNGLUXVERTEXP4UIVPROC) (GLenum type, const GLuint *value);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
typedef void (APIENTRYP PFNGLUXMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
typedef void (APIENTRYP PFNGLUXNORMALP3UIPROC) (GLenum type, GLuint coords);
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
typedef void (APIENTRYP PFNGLUXNORMALP3UIVPROC) (GLenum type, const GLuint *coords);
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
typedef void (APIENTRYP PFNGLUXCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
typedef void (APIENTRYP PFNGLUXCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
typedef void (APIENTRYP PFNGLUXCOLORP4UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
typedef void (APIENTRYP PFNGLUXCOLORP4UIVPROC) (GLenum type, const GLuint *color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
typedef void (APIENTRYP PFNGLUXSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glBindFragDataLocationIndexed
extern PFNGLUXBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
#endif
#ifndef __GLUX__GLFCT_glGetFragDataIndex
extern PFNGLUXGETFRAGDATAINDEXPROC glGetFragDataIndex;
#endif
#ifndef __GLUX__GLFCT_glGenSamplers
extern PFNGLUXGENSAMPLERSPROC glGenSamplers;
#endif
#ifndef __GLUX__GLFCT_glDeleteSamplers
extern PFNGLUXDELETESAMPLERSPROC glDeleteSamplers;
#endif
#ifndef __GLUX__GLFCT_glIsSampler
extern PFNGLUXISSAMPLERPROC glIsSampler;
#endif
#ifndef __GLUX__GLFCT_glBindSampler
extern PFNGLUXBINDSAMPLERPROC glBindSampler;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameteri
extern PFNGLUXSAMPLERPARAMETERIPROC glSamplerParameteri;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameteriv
extern PFNGLUXSAMPLERPARAMETERIVPROC glSamplerParameteriv;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterf
extern PFNGLUXSAMPLERPARAMETERFPROC glSamplerParameterf;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterfv
extern PFNGLUXSAMPLERPARAMETERFVPROC glSamplerParameterfv;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterIiv
extern PFNGLUXSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
#endif
#ifndef __GLUX__GLFCT_glSamplerParameterIuiv
extern PFNGLUXSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameteriv
extern PFNGLUXGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterIiv
extern PFNGLUXGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterfv
extern PFNGLUXGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
#endif
#ifndef __GLUX__GLFCT_glGetSamplerParameterIuiv
extern PFNGLUXGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
#endif
#ifndef __GLUX__GLFCT_glQueryCounter
extern PFNGLUXQUERYCOUNTERPROC glQueryCounter;
#endif
#ifndef __GLUX__GLFCT_glGetQueryObjecti64v
extern PFNGLUXGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
#endif
#ifndef __GLUX__GLFCT_glGetQueryObjectui64v
extern PFNGLUXGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribDivisor
extern PFNGLUXVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1ui
extern PFNGLUXVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP1uiv
extern PFNGLUXVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2ui
extern PFNGLUXVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP2uiv
extern PFNGLUXVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3ui
extern PFNGLUXVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP3uiv
extern PFNGLUXVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4ui
extern PFNGLUXVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexAttribP4uiv
extern PFNGLUXVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP2ui
extern PFNGLUXVERTEXP2UIPROC glVertexP2ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP2uiv
extern PFNGLUXVERTEXP2UIVPROC glVertexP2uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP3ui
extern PFNGLUXVERTEXP3UIPROC glVertexP3ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP3uiv
extern PFNGLUXVERTEXP3UIVPROC glVertexP3uiv;
#endif
#ifndef __GLUX__GLFCT_glVertexP4ui
extern PFNGLUXVERTEXP4UIPROC glVertexP4ui;
#endif
#ifndef __GLUX__GLFCT_glVertexP4uiv
extern PFNGLUXVERTEXP4UIVPROC glVertexP4uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1ui
extern PFNGLUXTEXCOORDP1UIPROC glTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP1uiv
extern PFNGLUXTEXCOORDP1UIVPROC glTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2ui
extern PFNGLUXTEXCOORDP2UIPROC glTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP2uiv
extern PFNGLUXTEXCOORDP2UIVPROC glTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3ui
extern PFNGLUXTEXCOORDP3UIPROC glTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP3uiv
extern PFNGLUXTEXCOORDP3UIVPROC glTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4ui
extern PFNGLUXTEXCOORDP4UIPROC glTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glTexCoordP4uiv
extern PFNGLUXTEXCOORDP4UIVPROC glTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1ui
extern PFNGLUXMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP1uiv
extern PFNGLUXMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2ui
extern PFNGLUXMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP2uiv
extern PFNGLUXMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3ui
extern PFNGLUXMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP3uiv
extern PFNGLUXMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4ui
extern PFNGLUXMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
#endif
#ifndef __GLUX__GLFCT_glMultiTexCoordP4uiv
extern PFNGLUXMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
#endif
#ifndef __GLUX__GLFCT_glNormalP3ui
extern PFNGLUXNORMALP3UIPROC glNormalP3ui;
#endif
#ifndef __GLUX__GLFCT_glNormalP3uiv
extern PFNGLUXNORMALP3UIVPROC glNormalP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP3ui
extern PFNGLUXCOLORP3UIPROC glColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glColorP3uiv
extern PFNGLUXCOLORP3UIVPROC glColorP3uiv;
#endif
#ifndef __GLUX__GLFCT_glColorP4ui
extern PFNGLUXCOLORP4UIPROC glColorP4ui;
#endif
#ifndef __GLUX__GLFCT_glColorP4uiv
extern PFNGLUXCOLORP4UIVPROC glColorP4uiv;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3ui
extern PFNGLUXSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
#endif
#ifndef __GLUX__GLFCT_glSecondaryColorP3uiv
extern PFNGLUXSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
