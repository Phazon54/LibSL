
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_EXT_texture_integer__
#define __GLUX_GL_EXT_texture_integer__

GLUX_NEW_PLUGIN(GL_EXT_texture_integer)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_RGBA32UI_EXT
#    define GL_RGBA32UI_EXT 0x8D70
#  endif
#  ifndef GL_RGB32UI_EXT
#    define GL_RGB32UI_EXT 0x8D71
#  endif
#  ifndef GL_ALPHA32UI_EXT
#    define GL_ALPHA32UI_EXT 0x8D72
#  endif
#  ifndef GL_INTENSITY32UI_EXT
#    define GL_INTENSITY32UI_EXT 0x8D73
#  endif
#  ifndef GL_LUMINANCE32UI_EXT
#    define GL_LUMINANCE32UI_EXT 0x8D74
#  endif
#  ifndef GL_LUMINANCE_ALPHA32UI_EXT
#    define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#  endif
#  ifndef GL_RGBA16UI_EXT
#    define GL_RGBA16UI_EXT 0x8D76
#  endif
#  ifndef GL_RGB16UI_EXT
#    define GL_RGB16UI_EXT 0x8D77
#  endif
#  ifndef GL_ALPHA16UI_EXT
#    define GL_ALPHA16UI_EXT 0x8D78
#  endif
#  ifndef GL_INTENSITY16UI_EXT
#    define GL_INTENSITY16UI_EXT 0x8D79
#  endif
#  ifndef GL_LUMINANCE16UI_EXT
#    define GL_LUMINANCE16UI_EXT 0x8D7A
#  endif
#  ifndef GL_LUMINANCE_ALPHA16UI_EXT
#    define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#  endif
#  ifndef GL_RGBA8UI_EXT
#    define GL_RGBA8UI_EXT 0x8D7C
#  endif
#  ifndef GL_RGB8UI_EXT
#    define GL_RGB8UI_EXT 0x8D7D
#  endif
#  ifndef GL_ALPHA8UI_EXT
#    define GL_ALPHA8UI_EXT 0x8D7E
#  endif
#  ifndef GL_INTENSITY8UI_EXT
#    define GL_INTENSITY8UI_EXT 0x8D7F
#  endif
#  ifndef GL_LUMINANCE8UI_EXT
#    define GL_LUMINANCE8UI_EXT 0x8D80
#  endif
#  ifndef GL_LUMINANCE_ALPHA8UI_EXT
#    define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#  endif
#  ifndef GL_RGBA32I_EXT
#    define GL_RGBA32I_EXT 0x8D82
#  endif
#  ifndef GL_RGB32I_EXT
#    define GL_RGB32I_EXT 0x8D83
#  endif
#  ifndef GL_ALPHA32I_EXT
#    define GL_ALPHA32I_EXT 0x8D84
#  endif
#  ifndef GL_INTENSITY32I_EXT
#    define GL_INTENSITY32I_EXT 0x8D85
#  endif
#  ifndef GL_LUMINANCE32I_EXT
#    define GL_LUMINANCE32I_EXT 0x8D86
#  endif
#  ifndef GL_LUMINANCE_ALPHA32I_EXT
#    define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#  endif
#  ifndef GL_RGBA16I_EXT
#    define GL_RGBA16I_EXT 0x8D88
#  endif
#  ifndef GL_RGB16I_EXT
#    define GL_RGB16I_EXT 0x8D89
#  endif
#  ifndef GL_ALPHA16I_EXT
#    define GL_ALPHA16I_EXT 0x8D8A
#  endif
#  ifndef GL_INTENSITY16I_EXT
#    define GL_INTENSITY16I_EXT 0x8D8B
#  endif
#  ifndef GL_LUMINANCE16I_EXT
#    define GL_LUMINANCE16I_EXT 0x8D8C
#  endif
#  ifndef GL_LUMINANCE_ALPHA16I_EXT
#    define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#  endif
#  ifndef GL_RGBA8I_EXT
#    define GL_RGBA8I_EXT 0x8D8E
#  endif
#  ifndef GL_RGB8I_EXT
#    define GL_RGB8I_EXT 0x8D8F
#  endif
#  ifndef GL_ALPHA8I_EXT
#    define GL_ALPHA8I_EXT 0x8D90
#  endif
#  ifndef GL_INTENSITY8I_EXT
#    define GL_INTENSITY8I_EXT 0x8D91
#  endif
#  ifndef GL_LUMINANCE8I_EXT
#    define GL_LUMINANCE8I_EXT 0x8D92
#  endif
#  ifndef GL_LUMINANCE_ALPHA8I_EXT
#    define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#  endif
#  ifndef GL_RED_INTEGER_EXT
#    define GL_RED_INTEGER_EXT 0x8D94
#  endif
#  ifndef GL_GREEN_INTEGER_EXT
#    define GL_GREEN_INTEGER_EXT 0x8D95
#  endif
#  ifndef GL_BLUE_INTEGER_EXT
#    define GL_BLUE_INTEGER_EXT 0x8D96
#  endif
#  ifndef GL_ALPHA_INTEGER_EXT
#    define GL_ALPHA_INTEGER_EXT 0x8D97
#  endif
#  ifndef GL_RGB_INTEGER_EXT
#    define GL_RGB_INTEGER_EXT 0x8D98
#  endif
#  ifndef GL_RGBA_INTEGER_EXT
#    define GL_RGBA_INTEGER_EXT 0x8D99
#  endif
#  ifndef GL_BGR_INTEGER_EXT
#    define GL_BGR_INTEGER_EXT 0x8D9A
#  endif
#  ifndef GL_BGRA_INTEGER_EXT
#    define GL_BGRA_INTEGER_EXT 0x8D9B
#  endif
#  ifndef GL_LUMINANCE_INTEGER_EXT
#    define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#  endif
#  ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#    define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#  endif
#  ifndef GL_RGBA_INTEGER_MODE_EXT
#    define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
typedef void (APIENTRYP PFNGLUXGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
typedef void (APIENTRYP PFNGLUXCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glTexParameterIivEXT
extern PFNGLUXTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glTexParameterIuivEXT
extern PFNGLUXTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIivEXT
extern PFNGLUXGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
#endif
#ifndef __GLUX__GLFCT_glGetTexParameterIuivEXT
extern PFNGLUXGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIiEXT
extern PFNGLUXCLEARCOLORIIEXTPROC glClearColorIiEXT;
#endif
#ifndef __GLUX__GLFCT_glClearColorIuiEXT
extern PFNGLUXCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
