
// --------------------------------------------------------
// Generated by glux perl script (Fri Feb  7 10:09:04 2020)
// 
// Sylvain Lefebvre - 2002-2014 - Sylvain.Lefebvre@inria.fr
// --------------------------------------------------------
#if defined(_WIN32) || defined(_WIN64)
#  include <windows.h>
#endif
#ifdef __APPLE__
#  define GL_GLEXT_LEGACY
#endif

#ifndef GL_ARB_multitexture // hack due to MESA headers including GL_ARB_multitexture
#define GL_ARB_multitexture
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#else
#ifdef __APPLE__
#include <OpenGL/gl.h>
#else
#include <GL/gl.h>
#endif
#undef  GL_ARB_multitexture
#endif

#undef  GL_GLEXT_PROTOTYPES
#if defined(_WIN32) || defined(_WIN64)
#  include "glux_glext.h"
#  include "glux_wglext.h"
#else
#ifdef __APPLE__
//#  include "glux_glext_apple.h"
#  include "glux_glext.h"
#else
#ifdef EMSCRIPTEN
#  include "glux_glext.h"
#else
#  include <GL/glx.h>
#  include "glux_glext.h"
#  include "glux_glxext.h"
#endif
#endif
#endif
#include "gluxLoader.h"
#include "gluxPlugin.h"
// --------------------------------------------------------
//         Plugin creation
// --------------------------------------------------------

#ifndef __GLUX_GL_ARB_shading_language_include__
#define __GLUX_GL_ARB_shading_language_include__

GLUX_NEW_PLUGIN(GL_ARB_shading_language_include)
// --------------------------------------------------------
//           Extension defines
// --------------------------------------------------------
#  ifndef GL_SHADER_INCLUDE_ARB
#    define GL_SHADER_INCLUDE_ARB 0x8DAE
#  endif
#  ifndef GL_NAMED_STRING_LENGTH_ARB
#    define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#  endif
#  ifndef GL_NAMED_STRING_TYPE_ARB
#    define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#  endif
// --------------------------------------------------------
//           Extension gl function typedefs
// --------------------------------------------------------
#ifndef __GLUX__GLFCT_glNamedStringARB
typedef void (APIENTRYP PFNGLUXNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
#endif
#ifndef __GLUX__GLFCT_glDeleteNamedStringARB
typedef void (APIENTRYP PFNGLUXDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glCompileShaderIncludeARB
typedef void (APIENTRYP PFNGLUXCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
#endif
#ifndef __GLUX__GLFCT_glIsNamedStringARB
typedef GLboolean (APIENTRYP PFNGLUXISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);
#endif
#ifndef __GLUX__GLFCT_glGetNamedStringARB
typedef void (APIENTRYP PFNGLUXGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
#endif
#ifndef __GLUX__GLFCT_glGetNamedStringivARB
typedef void (APIENTRYP PFNGLUXGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);
#endif
// --------------------------------------------------------
//           Extension gl functions
// --------------------------------------------------------
namespace glux {
#ifndef __GLUX__GLFCT_glNamedStringARB
extern PFNGLUXNAMEDSTRINGARBPROC glNamedStringARB;
#endif
#ifndef __GLUX__GLFCT_glDeleteNamedStringARB
extern PFNGLUXDELETENAMEDSTRINGARBPROC glDeleteNamedStringARB;
#endif
#ifndef __GLUX__GLFCT_glCompileShaderIncludeARB
extern PFNGLUXCOMPILESHADERINCLUDEARBPROC glCompileShaderIncludeARB;
#endif
#ifndef __GLUX__GLFCT_glIsNamedStringARB
extern PFNGLUXISNAMEDSTRINGARBPROC glIsNamedStringARB;
#endif
#ifndef __GLUX__GLFCT_glGetNamedStringARB
extern PFNGLUXGETNAMEDSTRINGARBPROC glGetNamedStringARB;
#endif
#ifndef __GLUX__GLFCT_glGetNamedStringivARB
extern PFNGLUXGETNAMEDSTRINGIVARBPROC glGetNamedStringivARB;
#endif
} // namespace glux
// --------------------------------------------------------
#endif
// --------------------------------------------------------
